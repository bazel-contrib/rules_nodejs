diff --git a/node_modules/@angular/bazel/_BUILD.bazel b/node_modules/@angular/bazel/_BUILD.bazel
index 7501525..172d4af 100755
--- a/node_modules/@angular/bazel/_BUILD.bazel
+++ b/node_modules/@angular/bazel/_BUILD.bazel
@@ -6,12 +6,12 @@ pkg_npm(
         ["*"],
         exclude = ["yarn.lock"],
     ) + [
-        "//src:package_assets",
-        "//src/api-extractor:package_assets",
-        "//src/builders:package_assets",
-        "//src/ng_package:package_assets",
-        "//src/ngc-wrapped:package_assets",
-        "//src/schematics:package_assets",
+        "//@angular/bazel/src:package_assets",
+        "//@angular/bazel/src/api-extractor:package_assets",
+        "//@angular/bazel/src/builders:package_assets",
+        "//@angular/bazel/src/ng_package:package_assets",
+        "//@angular/bazel/src/ngc-wrapped:package_assets",
+        "//@angular/bazel/src/schematics:package_assets",
         "//third_party/github.com/bazelbuild/bazel/src/main/protobuf:package_assets",
     ],
     nested_packages = [
@@ -27,11 +27,11 @@ pkg_npm(
     # Dependencies on the full npm_package cause long re-builds.
     visibility = ["//integration:__pkg__"],
     deps = [
-        "//src/api-extractor:lib",
-        "//src/builders",
-        "//src/ng_package:lib",
-        "//src/ngc-wrapped:ngc_lib",
-        "//src/schematics/ng-add",
-        "//src/schematics/ng-new",
+        "//@angular/bazel/src/api-extractor:lib",
+        "//@angular/bazel/src/builders",
+        "//@angular/bazel/src/ng_package:lib",
+        "//@angular/bazel/src/ngc-wrapped:ngc_lib",
+        "//@angular/bazel/src/schematics/ng-add",
+        "//@angular/bazel/src/schematics/ng-new",
     ],
 )
diff --git a/node_modules/@angular/bazel/docs/src/ng_package/ng_package.html b/node_modules/@angular/bazel/docs/src/ng_package/ng_package.html
index ec81d4a..d4e6615 100755
--- a/node_modules/@angular/bazel/docs/src/ng_package/ng_package.html
+++ b/node_modules/@angular/bazel/docs/src/ng_package/ng_package.html
@@ -1,59 +1,80 @@
-
-
 <!--
 Documentation generated by Skydoc
 -->
 <!DOCTYPE html>
 <html>
   <head>
-    <meta charset="utf-8">
+    <meta charset="utf-8" />
     <meta name="viewport" content="width=device-width initial-scale=1" />
-    <meta http-equiv="X-UA-Compatible" content="IE=edge">
+    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
 
     <title>Package Angular libraries for npm distribution</title>
 
-    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,600,700" type="text/css">
-    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
-    <link rel="stylesheet" href="https://code.getmdl.io/1.1.1/material.green-light_blue.min.css">
+    <link
+      rel="stylesheet"
+      href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,600,700"
+      type="text/css"
+    />
+    <link
+      rel="stylesheet"
+      href="https://fonts.googleapis.com/icon?family=Material+Icons"
+    />
+    <link
+      rel="stylesheet"
+      href="https://code.getmdl.io/1.1.1/material.green-light_blue.min.css"
+    />
     <script defer src="https://code.getmdl.io/1.1.1/material.min.js"></script>
-    <link rel="stylesheet" href="/bazel-builds/main.css">
+    <link rel="stylesheet" href="/bazel-builds/main.css" />
   </head>
   <body>
-    <div class="mdl-layout mdl-js-layout mdl-layout--fixed-drawer
-      mdl-layout--fixed-header">
+    <div
+      class="mdl-layout mdl-js-layout mdl-layout--fixed-drawer
+      mdl-layout--fixed-header"
+    >
       <header class="mdl-layout__header">
         <div class="mdl-layout__header-row">
-          <span class="mdl-layout-title">Package Angular libraries for npm distribution</span>
+          <span class="mdl-layout-title"
+            >Package Angular libraries for npm distribution</span
+          >
         </div>
       </header>
       <div class="mdl-layout__drawer">
         <span class="mdl-layout-title">Bazel</span>
         <nav class="drawer-nav">
           <ul class="drawer-nav">
-            
-<li><a href="/bazel-builds/index.html">Overview</a></li>
-<li>
-  <a href="/bazel-builds/src/ng_module.html">Run Angular's AOT template compiler</a>
-  <ul>
-    <li>
-      <a href="/bazel-builds/src/ng_module.html#ng_module">
-        ng_module
-      </a>
-    </li>
-  </ul>
-</li>
-<li>
-  <a href="/bazel-builds/src/ng_package/ng_package.html">Package Angular libraries for npm distribution</a>
-  <ul>
-    <li><a href="/bazel-builds/src/ng_package/ng_package.html#overview">Overview</a></li>
-    <li>
-      <a href="/bazel-builds/src/ng_package/ng_package.html#ng_package">
-        ng_package
-      </a>
-    </li>
-  </ul>
-</li>
-
+            <li><a href="/bazel-builds/index.html">Overview</a></li>
+            <li>
+              <a href="/bazel-builds/src/ng_module.html"
+                >Run Angular's AOT template compiler</a
+              >
+              <ul>
+                <li>
+                  <a href="/bazel-builds/src/ng_module.html#ng_module">
+                    ng_module
+                  </a>
+                </li>
+              </ul>
+            </li>
+            <li>
+              <a href="/bazel-builds/src/ng_package/ng_package.html"
+                >Package Angular libraries for npm distribution</a
+              >
+              <ul>
+                <li>
+                  <a
+                    href="/bazel-builds/src/ng_package/ng_package.html#overview"
+                    >Overview</a
+                  >
+                </li>
+                <li>
+                  <a
+                    href="/bazel-builds/src/ng_package/ng_package.html#ng_package"
+                  >
+                    ng_package
+                  </a>
+                </li>
+              </ul>
+            </li>
           </ul>
         </nav>
       </div>
@@ -62,120 +83,187 @@ Documentation generated by Skydoc
         <div class="page-content">
           <h1>Package Angular libraries for npm distribution</h1>
 
-<nav class="toc">
-  <h2><a href="#overview">Overview</a></h2>
-  <h2>Rules</h2>
-  <ul>
-    <li><a href="#ng_package">ng_package</a></li>
-  </ul>
-  <h2>Macros</h2>
-  <ul>
-    <li><a href="#primary_entry_point_name">primary_entry_point_name</a></li>
-  </ul>
-</nav>
-          <hr>
+          <nav class="toc">
+            <h2><a href="#overview">Overview</a></h2>
+            <h2>Rules</h2>
+            <ul>
+              <li><a href="#ng_package">ng_package</a></li>
+            </ul>
+            <h2>Macros</h2>
+            <ul>
+              <li>
+                <a href="#primary_entry_point_name">primary_entry_point_name</a>
+              </li>
+            </ul>
+          </nav>
+          <hr />
           <h2 id="overview">Overview</h2>
-          <p>If all users of an Angular library use Bazel (e.g. internal usage in your company)
-then you should simply add your library to the <code>deps</code> of the consuming application.</p>
-<p>These rules exist for compatibility with non-Bazel consumers of your library.</p>
-<p>It packages your library following the Angular Package Format, see the
-specification of this format at <a href="https://goo.gl/jB3GVv">https://goo.gl/jB3GVv</a></p>
-
-          <hr>
+          <p>
+            If all users of an Angular library use Bazel (e.g. internal usage in
+            your company) then you should simply add your library to the
+            <code>deps</code> of the consuming application.
+          </p>
+          <p>
+            These rules exist for compatibility with non-Bazel consumers of your
+            library.
+          </p>
+          <p>
+            It packages your library following the Angular Package Format, see
+            the specification of this format at
+            <a href="https://goo.gl/jB3GVv">https://goo.gl/jB3GVv</a>
+          </p>
+
+          <hr />
 
           <h2 id="primary_entry_point_name">primary_entry_point_name</h2>
 
           <pre>primary_entry_point_name(<a href="#primary_entry_point_name.name">name</a>, <a href="#primary_entry_point_name.entry_point">entry_point</a>, <a href="#primary_entry_point_name.entry_point_name">entry_point_name</a>)</pre>
 
           <p>This is not a public API.</p>
-<p>Compute the name of the primary entry point in the library.</p>
-<p>Returns:
-  name of the entry point, which will appear in the name of generated bundles</p>
-
+          <p>Compute the name of the primary entry point in the library.</p>
+          <p>
+            Returns: name of the entry point, which will appear in the name of
+            generated bundles
+          </p>
 
           <h3 id="primary_entry_point_name_args">Attributes</h3>
 
-<table class="params-table">
-  <colgroup>
-    <col class="col-param" />
-    <col class="col-description" />
-  </colgroup>
-  <tbody>
-    <tr id="primary_entry_point_name.name">
-      <td><code>name</code></td>
-      <td>
-        <p><code><a href="https://bazel.build/docs/build-ref.html#name">Name</a>; Required</code></p>
-        <p>the name of the <code>ng_package</code> rule, as a fallback.</p>
-      </td>
-    </tr>
-    <tr id="primary_entry_point_name.entry_point">
-      <td><code>entry_point</code></td>
-      <td>
-        <p><code>Unknown; Required</code></p>
-        <p>The starting point of the application, see rollup_bundle.</p>
-      </td>
-    </tr>
-    <tr id="primary_entry_point_name.entry_point_name">
-      <td><code>entry_point_name</code></td>
-      <td>
-        <p><code>Unknown; Required</code></p>
-        <p>if set, this is the returned value.</p>
-      </td>
-    </tr>
-  </tbody>
-</table>
-          <hr>
+          <table class="params-table">
+            <colgroup>
+              <col class="col-param" />
+              <col class="col-description" />
+            </colgroup>
+            <tbody>
+              <tr id="primary_entry_point_name.name">
+                <td><code>name</code></td>
+                <td>
+                  <p>
+                    <code
+                      ><a href="https://bazel.build/docs/build-ref.html#name"
+                        >Name</a
+                      >; Required</code
+                    >
+                  </p>
+                  <p>
+                    the name of the <code>ng_package</code> rule, as a fallback.
+                  </p>
+                </td>
+              </tr>
+              <tr id="primary_entry_point_name.entry_point">
+                <td><code>entry_point</code></td>
+                <td>
+                  <p><code>Unknown; Required</code></p>
+                  <p>
+                    The starting point of the application, see rollup_bundle.
+                  </p>
+                </td>
+              </tr>
+              <tr id="primary_entry_point_name.entry_point_name">
+                <td><code>entry_point_name</code></td>
+                <td>
+                  <p><code>Unknown; Required</code></p>
+                  <p>if set, this is the returned value.</p>
+                </td>
+              </tr>
+            </tbody>
+          </table>
+          <hr />
 
           <h2 id="ng_package">ng_package</h2>
 
           <pre>ng_package(<a href="#ng_package.name">name</a>, <a href="#ng_package.deps">deps</a>, <a href="#ng_package.data">data</a>, <a href="#ng_package.srcs">srcs</a>, <a href="#ng_package.entry_point">entry_point</a>, <a href="#ng_package.entry_point_name">entry_point_name</a>, <a href="#ng_package.globals">globals</a>, <a href="#ng_package.include_devmode_srcs">include_devmode_srcs</a>, <a href="#ng_package.license_banner">license_banner</a>, <a href="#ng_package.ng_packager">ng_packager</a>, <a href="#ng_package.readme_md">readme_md</a>, <a href="#ng_package.rollup">rollup</a>, <a href="#ng_package.rollup_config_tmpl">rollup_config_tmpl</a>, <a href="#ng_package.terser">terser</a>, <a href="#ng_package.terser_config_file">terser_config_file</a>)</pre>
 
-          <p>ng_package produces an npm-ready package from an Angular library.</p>
-
+          <p>
+            ng_package produces an npm-ready package from an Angular library.
+          </p>
 
           <h3 id="ng_package_args">Attributes</h3>
 
-<table class="params-table">
-  <colgroup>
-    <col class="col-param" />
-    <col class="col-description" />
-  </colgroup>
-  <tbody>
-    <tr id="ng_package.name">
-      <td><code>name</code></td>
-      <td>
-        <p><code><a href="https://bazel.build/docs/build-ref.html#name">Name</a>; Required</code></p>
-        <p>A unique name for this rule.</p>
-      </td>
-    </tr>
-    <tr id="ng_package.deps">
-      <td><code>deps</code></td>
-      <td>
-        <p><code>List of <a href="https://bazel.build/docs/build-ref.html#labels">labels</a>; Optional; Default is []</code></p>
-        <p>Other rules that produce JavaScript outputs, such as <code>ts_library</code>.</p>
-      </td>
-    </tr>
-    <tr id="ng_package.data">
-      <td><code>data</code></td>
-      <td>
-        <p><code>List of <a href="https://bazel.build/docs/build-ref.html#labels">labels</a>; Optional; Default is []</code></p>
-        <p>Additional, non-Angular files to be added to the package, e.g. global CSS assets.</p>
-      </td>
-    </tr>
-    <tr id="ng_package.srcs">
-      <td><code>srcs</code></td>
-      <td>
-        <p><code>List of <a href="https://bazel.build/docs/build-ref.html#labels">labels</a>; Optional; Default is []</code></p>
-        <p>JavaScript source files from the workspace.
-        These can use ES2015 syntax and ES Modules (import/export)</p>
-      </td>
-    </tr>
-    <tr id="ng_package.entry_point">
-      <td><code>entry_point</code></td>
-      <td>
-        <p><code><a href="https://bazel.build/docs/build-ref.html#labels">Label</a>; Required</code></p>
-        <p>The starting point of the application, passed as the <code>--input</code> flag to rollup.</p>
-<pre><code>    If the entry JavaScript file belongs to the same package (as the BUILD file),
+          <table class="params-table">
+            <colgroup>
+              <col class="col-param" />
+              <col class="col-description" />
+            </colgroup>
+            <tbody>
+              <tr id="ng_package.name">
+                <td><code>name</code></td>
+                <td>
+                  <p>
+                    <code
+                      ><a href="https://bazel.build/docs/build-ref.html#name"
+                        >Name</a
+                      >; Required</code
+                    >
+                  </p>
+                  <p>A unique name for this rule.</p>
+                </td>
+              </tr>
+              <tr id="ng_package.deps">
+                <td><code>deps</code></td>
+                <td>
+                  <p>
+                    <code
+                      >List of
+                      <a href="https://bazel.build/docs/build-ref.html#labels"
+                        >labels</a
+                      >; Optional; Default is []</code
+                    >
+                  </p>
+                  <p>
+                    Other rules that produce JavaScript outputs, such as
+                    <code>ts_library</code>.
+                  </p>
+                </td>
+              </tr>
+              <tr id="ng_package.data">
+                <td><code>data</code></td>
+                <td>
+                  <p>
+                    <code
+                      >List of
+                      <a href="https://bazel.build/docs/build-ref.html#labels"
+                        >labels</a
+                      >; Optional; Default is []</code
+                    >
+                  </p>
+                  <p>
+                    Additional, non-Angular files to be added to the package,
+                    e.g. global CSS assets.
+                  </p>
+                </td>
+              </tr>
+              <tr id="ng_package.srcs">
+                <td><code>srcs</code></td>
+                <td>
+                  <p>
+                    <code
+                      >List of
+                      <a href="https://bazel.build/docs/build-ref.html#labels"
+                        >labels</a
+                      >; Optional; Default is []</code
+                    >
+                  </p>
+                  <p>
+                    JavaScript source files from the workspace. These can use
+                    ES2015 syntax and ES Modules (import/export)
+                  </p>
+                </td>
+              </tr>
+              <tr id="ng_package.entry_point">
+                <td><code>entry_point</code></td>
+                <td>
+                  <p>
+                    <code
+                      ><a href="https://bazel.build/docs/build-ref.html#labels"
+                        >Label</a
+                      >; Required</code
+                    >
+                  </p>
+                  <p>
+                    The starting point of the application, passed as the
+                    <code>--input</code> flag to rollup.
+                  </p>
+                  <pre><code>    If the entry JavaScript file belongs to the same package (as the BUILD file),
     you can simply reference it by its relative name to the package directory:
 
     ```
@@ -218,93 +306,155 @@ specification of this format at <a href="https://goo.gl/jB3GVv">https://goo.gl/j
     )
     ```
 </code></pre>
-      </td>
-    </tr>
-    <tr id="ng_package.entry_point_name">
-      <td><code>entry_point_name</code></td>
-      <td>
-        <p><code>String; Optional; Default is ''</code></p>
-        <p>Name to use when generating bundle files for the primary entry-point.</p>
-      </td>
-    </tr>
-    <tr id="ng_package.globals">
-      <td><code>globals</code></td>
-      <td>
-        <p><code>Dictionary mapping strings to string; Optional; Default is {}</code></p>
-        <p>A dict of symbols that reference external scripts.
-        The keys are variable names that appear in the program,
-        and the values are the symbol to reference at runtime in a global context (UMD bundles).
-        For example, a program referencing @angular/core should use ng.core
-        as the global reference, so Angular users should include the mapping
-        <code>"@angular/core":"ng.core"</code> in the globals.</p>
-      </td>
-    </tr>
-    <tr id="ng_package.include_devmode_srcs">
-      <td><code>include_devmode_srcs</code></td>
-      <td>
-        <p><code>Boolean; Optional; Default is False</code></p>
-        
-      </td>
-    </tr>
-    <tr id="ng_package.license_banner">
-      <td><code>license_banner</code></td>
-      <td>
-        <p><code><a href="https://bazel.build/docs/build-ref.html#labels">Label</a>; Optional</code></p>
-        <p>A .txt file passed to the <code>banner</code> config option of rollup.
-        The contents of the file will be copied to the top of the resulting bundles.
-        Note that you can replace a version placeholder in the license file, by using
-        the special version <code>9.0.5</code>. See the section on stamping in the README.</p>
-      </td>
-    </tr>
-    <tr id="ng_package.ng_packager">
-      <td><code>ng_packager</code></td>
-      <td>
-        <p><code><a href="https://bazel.build/docs/build-ref.html#labels">Label</a>; Optional; Default is @npm//@angular/bazel/bin:packager</code></p>
-        
-      </td>
-    </tr>
-    <tr id="ng_package.readme_md">
-      <td><code>readme_md</code></td>
-      <td>
-        <p><code><a href="https://bazel.build/docs/build-ref.html#labels">Label</a>; Optional</code></p>
-        
-      </td>
-    </tr>
-    <tr id="ng_package.rollup">
-      <td><code>rollup</code></td>
-      <td>
-        <p><code><a href="https://bazel.build/docs/build-ref.html#labels">Label</a>; Optional; Default is @npm_angular_bazel//src/ng_package:rollup_for_ng_package</code></p>
-        
-      </td>
-    </tr>
-    <tr id="ng_package.rollup_config_tmpl">
-      <td><code>rollup_config_tmpl</code></td>
-      <td>
-        <p><code><a href="https://bazel.build/docs/build-ref.html#labels">Label</a>; Optional; Default is @npm_angular_bazel//src/ng_package:rollup.config.js</code></p>
-        
-      </td>
-    </tr>
-    <tr id="ng_package.terser">
-      <td><code>terser</code></td>
-      <td>
-        <p><code><a href="https://bazel.build/docs/build-ref.html#labels">Label</a>; Optional; Default is @npm//terser/bin:terser</code></p>
-        
-      </td>
-    </tr>
-    <tr id="ng_package.terser_config_file">
-      <td><code>terser_config_file</code></td>
-      <td>
-        <p><code><a href="https://bazel.build/docs/build-ref.html#labels">Label</a>; Optional; Default is @npm_angular_bazel//src/ng_package:terser_config.default.json</code></p>
-        <p>A JSON file containing Terser minify() options.</p>
-<p>This is the file you would pass to the --config-file argument in terser's CLI.
-<a href="https://github.com/terser-js/terser#minify-options">https://github.com/terser-js/terser#minify-options</a> documents the content of the file.</p>
-<p>If <code>config_file</code> isn't supplied, Bazel will use a default config file.</p>
-      </td>
-    </tr>
-  </tbody>
-</table>
-
-
+                </td>
+              </tr>
+              <tr id="ng_package.entry_point_name">
+                <td><code>entry_point_name</code></td>
+                <td>
+                  <p><code>String; Optional; Default is ''</code></p>
+                  <p>
+                    Name to use when generating bundle files for the primary
+                    entry-point.
+                  </p>
+                </td>
+              </tr>
+              <tr id="ng_package.globals">
+                <td><code>globals</code></td>
+                <td>
+                  <p>
+                    <code
+                      >Dictionary mapping strings to string; Optional; Default
+                      is {}</code
+                    >
+                  </p>
+                  <p>
+                    A dict of symbols that reference external scripts. The keys
+                    are variable names that appear in the program, and the
+                    values are the symbol to reference at runtime in a global
+                    context (UMD bundles). For example, a program referencing
+                    @angular/core should use ng.core as the global reference, so
+                    Angular users should include the mapping
+                    <code>"@angular/core":"ng.core"</code> in the globals.
+                  </p>
+                </td>
+              </tr>
+              <tr id="ng_package.include_devmode_srcs">
+                <td><code>include_devmode_srcs</code></td>
+                <td>
+                  <p><code>Boolean; Optional; Default is False</code></p>
+                </td>
+              </tr>
+              <tr id="ng_package.license_banner">
+                <td><code>license_banner</code></td>
+                <td>
+                  <p>
+                    <code
+                      ><a href="https://bazel.build/docs/build-ref.html#labels"
+                        >Label</a
+                      >; Optional</code
+                    >
+                  </p>
+                  <p>
+                    A .txt file passed to the <code>banner</code> config option
+                    of rollup. The contents of the file will be copied to the
+                    top of the resulting bundles. Note that you can replace a
+                    version placeholder in the license file, by using the
+                    special version <code>9.0.5</code>. See the section on
+                    stamping in the README.
+                  </p>
+                </td>
+              </tr>
+              <tr id="ng_package.ng_packager">
+                <td><code>ng_packager</code></td>
+                <td>
+                  <p>
+                    <code
+                      ><a href="https://bazel.build/docs/build-ref.html#labels"
+                        >Label</a
+                      >; Optional; Default is
+                      @npm//@angular/bazel/bin:packager</code
+                    >
+                  </p>
+                </td>
+              </tr>
+              <tr id="ng_package.readme_md">
+                <td><code>readme_md</code></td>
+                <td>
+                  <p>
+                    <code
+                      ><a href="https://bazel.build/docs/build-ref.html#labels"
+                        >Label</a
+                      >; Optional</code
+                    >
+                  </p>
+                </td>
+              </tr>
+              <tr id="ng_package.rollup">
+                <td><code>rollup</code></td>
+                <td>
+                  <p>
+                    <code
+                      ><a href="https://bazel.build/docs/build-ref.html#labels"
+                        >Label</a
+                      >; Optional; Default is
+                      @npm_angular_bazel//@angular/bazel/src/ng_package:rollup_for_ng_package</code
+                    >
+                  </p>
+                </td>
+              </tr>
+              <tr id="ng_package.rollup_config_tmpl">
+                <td><code>rollup_config_tmpl</code></td>
+                <td>
+                  <p>
+                    <code
+                      ><a href="https://bazel.build/docs/build-ref.html#labels"
+                        >Label</a
+                      >; Optional; Default is
+                      @npm_angular_bazel//@angular/bazel/src/ng_package:rollup.config.js</code
+                    >
+                  </p>
+                </td>
+              </tr>
+              <tr id="ng_package.terser">
+                <td><code>terser</code></td>
+                <td>
+                  <p>
+                    <code
+                      ><a href="https://bazel.build/docs/build-ref.html#labels"
+                        >Label</a
+                      >; Optional; Default is @npm//terser/bin:terser</code
+                    >
+                  </p>
+                </td>
+              </tr>
+              <tr id="ng_package.terser_config_file">
+                <td><code>terser_config_file</code></td>
+                <td>
+                  <p>
+                    <code
+                      ><a href="https://bazel.build/docs/build-ref.html#labels"
+                        >Label</a
+                      >; Optional; Default is
+                      @npm_angular_bazel//@angular/bazel/src/ng_package:terser_config.default.json</code
+                    >
+                  </p>
+                  <p>A JSON file containing Terser minify() options.</p>
+                  <p>
+                    This is the file you would pass to the --config-file
+                    argument in terser's CLI.
+                    <a href="https://github.com/terser-js/terser#minify-options"
+                      >https://github.com/terser-js/terser#minify-options</a
+                    >
+                    documents the content of the file.
+                  </p>
+                  <p>
+                    If <code>config_file</code> isn't supplied, Bazel will use a
+                    default config file.
+                  </p>
+                </td>
+              </tr>
+            </tbody>
+          </table>
         </div>
 
         <footer class="mdl-mini-footer">
diff --git a/node_modules/@angular/bazel/index.bzl b/node_modules/@angular/bazel/index.bzl
index 5a8dc27..7ffef3d 100755
--- a/node_modules/@angular/bazel/index.bzl
+++ b/node_modules/@angular/bazel/index.bzl
@@ -7,8 +7,8 @@
 Users should not load files under "/src"
 """
 
-load("//src/ng_package:ng_package.bzl", _ng_package = "ng_package")
-load("//src:ng_module.bzl", _ng_module = "ng_module_macro")
+load("//@angular/bazel/src/ng_package:ng_package.bzl", _ng_package = "ng_package")
+load("//@angular/bazel/src:ng_module.bzl", _ng_module = "ng_module_macro")
 
 ng_module = _ng_module
 ng_package = _ng_package
diff --git a/node_modules/@angular/bazel/src/builders/files/e2e/BUILD.bazel.template b/node_modules/@angular/bazel/src/builders/files/e2e/BUILD.bazel.template
index 296b97e..c79ae8b 100755
--- a/node_modules/@angular/bazel/src/builders/files/e2e/BUILD.bazel.template
+++ b/node_modules/@angular/bazel/src/builders/files/e2e/BUILD.bazel.template
@@ -22,14 +22,14 @@ ts_library(
 protractor_web_test_suite(
     name = "prodserver_test",
     on_prepare = ":protractor.on-prepare.js",
-    server = "//src:prodserver",
+    server = "//@angular/bazel/src:prodserver",
     deps = [":e2e_lib"],
 )
 
 protractor_web_test_suite(
     name = "devserver_test",
     on_prepare = ":protractor.on-prepare.js",
-    server = "//src:devserver",
+    server = "//@angular/bazel/src:devserver",
     deps = [":e2e_lib"],
 )
 
diff --git a/node_modules/@angular/bazel/src/builders/files/src/BUILD.bazel.template b/node_modules/@angular/bazel/src/builders/files/src/BUILD.bazel.template
index fe189aa..fa39e4d 100755
--- a/node_modules/@angular/bazel/src/builders/files/src/BUILD.bazel.template
+++ b/node_modules/@angular/bazel/src/builders/files/src/BUILD.bazel.template
@@ -3,7 +3,7 @@ package(default_visibility = ["//visibility:public"])
 load("@build_bazel_rules_nodejs//:index.bzl", "pkg_web")
 load("@npm//history-server:index.bzl", "history_server")
 load("@npm//html-insert-assets:index.bzl", "html_insert_assets")
-load("@npm_angular_bazel//:index.bzl", "ng_module")
+load("@npm//@angular/bazel:index.bzl", "ng_module")
 load("@npm_bazel_karma//:index.bzl", "karma_web_test_suite")
 load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")
 load("@npm_bazel_terser//:index.bzl", "terser_minified")
@@ -54,7 +54,7 @@ rollup_bundle(
     config_file = "rollup.config.js",
     entry_point = ":main.prod.ts",
     deps = [
-        "//src",
+        "//@angular/bazel/src",
         "@npm//rollup-plugin-commonjs",
         "@npm//rollup-plugin-node-resolve",
     ],
diff --git a/node_modules/@angular/bazel/src/esm5.bzl b/node_modules/@angular/bazel/src/esm5.bzl
index 7907c12..9738a4f 100755
--- a/node_modules/@angular/bazel/src/esm5.bzl
+++ b/node_modules/@angular/bazel/src/esm5.bzl
@@ -95,7 +95,6 @@ def _esm5_outputs_aspect(target, ctx):
     elif replay_compiler_name.startswith("ngc-wrapped"):
         compiler = ctx.executable._ngc_wrapped
 
-        
     else:
         fail("Unknown replay compiler", target.typescript.replay_params.compiler.path)
 
@@ -146,12 +145,12 @@ esm5_outputs_aspect = aspect(
         # case we need to use "ngc_wrapped" from its source location because we can't have
         # the "npm" workspace that has the "@angular/bazel" NPM package installed.
         "_internal_ngc_wrapped": attr.label(
-            default = Label("//src/ngc-wrapped"),
+            default = Label("//@angular/bazel/src/ngc-wrapped"),
             executable = True,
             cfg = "host",
         ),
         "_modify_tsconfig": attr.label(
-            default = Label("//src:modify_tsconfig"),
+            default = Label("//@angular/bazel/src:modify_tsconfig"),
             executable = True,
             cfg = "host",
         ),
diff --git a/node_modules/@angular/bazel/src/external.bzl b/node_modules/@angular/bazel/src/external.bzl
index 32b640a..a787bbb 100755
--- a/node_modules/@angular/bazel/src/external.bzl
+++ b/node_modules/@angular/bazel/src/external.bzl
@@ -2,11 +2,11 @@
 """
 
 load(
-    "@npm_bazel_typescript//internal:build_defs.bzl",
+    "@npm//@bazel/typescript/internal:build_defs.bzl",
     _tsc_wrapped_tsconfig = "tsc_wrapped_tsconfig",
 )
 load(
-    "@npm_bazel_typescript//internal:common/compilation.bzl",
+    "@npm//@bazel/typescript/internal:common/compilation.bzl",
     _COMMON_ATTRIBUTES = "COMMON_ATTRIBUTES",
     _COMMON_OUTPUTS = "COMMON_OUTPUTS",
     _DEPS_ASPECTS = "DEPS_ASPECTS",
@@ -14,17 +14,19 @@ load(
     _ts_providers_dict_to_struct = "ts_providers_dict_to_struct",
 )
 load(
-    "@npm_bazel_typescript//internal:ts_config.bzl",
+    "@npm//@bazel/typescript/internal:ts_config.bzl",
     _TsConfigInfo = "TsConfigInfo",
 )
 load(
     "@build_bazel_rules_nodejs//:providers.bzl",
+    _LinkablePackageInfo = "LinkablePackageInfo",
     _NpmPackageInfo = "NpmPackageInfo",
     _js_ecma_script_module_info = "js_ecma_script_module_info",
     _js_named_module_info = "js_named_module_info",
     _node_modules_aspect = "node_modules_aspect",
 )
 
+LinkablePackageInfo = _LinkablePackageInfo
 NpmPackageInfo = _NpmPackageInfo
 node_modules_aspect = _node_modules_aspect
 
diff --git a/node_modules/@angular/bazel/src/ng_module.bzl b/node_modules/@angular/bazel/src/ng_module.bzl
index a38f6a8..0bd569d 100755
--- a/node_modules/@angular/bazel/src/ng_module.bzl
+++ b/node_modules/@angular/bazel/src/ng_module.bzl
@@ -13,6 +13,7 @@ load(
     "DEFAULT_NG_COMPILER",
     "DEFAULT_NG_XI18N",
     "DEPS_ASPECTS",
+    "LinkablePackageInfo",
     "NpmPackageInfo",
     "TsConfigInfo",
     "compile_ts",
@@ -629,6 +630,15 @@ def _ng_module_impl(ctx):
         # once it is no longer needed.
     ])
 
+    if ctx.attr.package_name:
+        path = "/".join([p for p in [ctx.bin_dir.path, ctx.label.workspace_root, ctx.label.package] if p])
+        ts_providers["providers"].append(LinkablePackageInfo(
+            package_name = ctx.attr.package_name,
+            package_path = ctx.attr.package_path,
+            path = path,
+            files = ts_providers["typescript"]["es5_sources"],
+        ))
+
     return ts_providers_dict_to_struct(ts_providers)
 
 local_deps_aspects = [node_modules_aspect, _collect_summaries_aspect]
@@ -750,6 +760,8 @@ NG_MODULE_RULE_ATTRS = dict(dict(COMMON_ATTRIBUTES, **NG_MODULE_ATTRIBUTES), **{
         default = Label("@npm//typescript:typescript__typings"),
     ),
     "entry_point": attr.label(allow_single_file = True),
+    "package_name": attr.string(),
+    "package_path": attr.string(),
 
     # Default is %{name}_public_index
     # The suffix points to the generated "bundle index" files that users import from
diff --git a/node_modules/@angular/bazel/src/ng_package/ng_package.bzl b/node_modules/@angular/bazel/src/ng_package/ng_package.bzl
index db33ad3..0079446 100755
--- a/node_modules/@angular/bazel/src/ng_package/ng_package.bzl
+++ b/node_modules/@angular/bazel/src/ng_package/ng_package.bzl
@@ -20,9 +20,9 @@ load(
     "PKG_NPM_OUTPUTS",
     "create_package",
 )
-load("//src:external.bzl", "FLAT_DTS_FILE_SUFFIX")
-load("//src:esm5.bzl", "esm5_outputs_aspect", "esm5_root_dir", "flatten_esm5")
-load("//src/ng_package:collect-type-definitions.bzl", "collect_type_definitions")
+load("//@angular/bazel/src:external.bzl", "FLAT_DTS_FILE_SUFFIX")
+load("//@angular/bazel/src:esm5.bzl", "esm5_outputs_aspect", "esm5_root_dir", "flatten_esm5")
+load("//@angular/bazel/src/ng_package:collect-type-definitions.bzl", "collect_type_definitions")
 
 # Prints a debug message if "--define=VERBOSE_LOGS=true" is specified.
 def _debug(vars, *args):
@@ -30,9 +30,9 @@ def _debug(vars, *args):
         print("[ng_package.bzl]", args)
 
 _DEFAULT_NG_PACKAGER = "@npm//@angular/bazel/bin:packager"
-_DEFAULT_ROLLUP_CONFIG_TMPL = "@npm_angular_bazel//src/ng_package:rollup.config.js"
-_DEFALUT_TERSER_CONFIG_FILE = "@npm_angular_bazel//src/ng_package:terser_config.default.json"
-_DEFAULT_ROLLUP = "@npm_angular_bazel//src/ng_package:rollup_for_ng_package"
+_DEFAULT_ROLLUP_CONFIG_TMPL = "@npm_angular_bazel//@angular/bazel/src/ng_package:rollup.config.js"
+_DEFALUT_TERSER_CONFIG_FILE = "@npm_angular_bazel//@angular/bazel/src/ng_package:terser_config.default.json"
+_DEFAULT_ROLLUP = "@npm_angular_bazel//@angular/bazel/src/ng_package:rollup_for_ng_package"
 _DEFAULT_TERSER = "@npm//terser/bin:terser"
 
 _NG_PACKAGE_MODULE_MAPPINGS_ATTR = "ng_package_module_mappings"
diff --git a/node_modules/@angular/bazel/src/schematics/ng-add/index.js b/node_modules/@angular/bazel/src/schematics/ng-add/index.js
index 84b1234..154c50b 100755
--- a/node_modules/@angular/bazel/src/schematics/ng-add/index.js
+++ b/node_modules/@angular/bazel/src/schematics/ng-add/index.js
@@ -180,25 +180,25 @@
             json_utils_2.replacePropertyInAstObject(recorder, architect, 'build', {
                 builder: '@angular/bazel:build',
                 options: {
-                    targetLabel: '//src:prodapp',
+                    targetLabel: '//@angular/bazel/src:prodapp',
                     bazelCommand: 'build',
                 },
                 configurations: {
                     production: {
-                        targetLabel: '//src:prodapp',
+                        targetLabel: '//@angular/bazel/src:prodapp',
                     },
                 },
             }, indent);
             json_utils_2.replacePropertyInAstObject(recorder, architect, 'serve', {
                 builder: '@angular/bazel:build',
                 options: {
-                    targetLabel: '//src:devserver',
+                    targetLabel: '//@angular/bazel/src:devserver',
                     bazelCommand: 'run',
                     watch: true,
                 },
                 configurations: {
                     production: {
-                        targetLabel: '//src:prodserver',
+                        targetLabel: '//@angular/bazel/src:prodserver',
                     },
                 },
             }, indent);
@@ -207,7 +207,7 @@
                     builder: '@angular/bazel:build',
                     options: {
                         bazelCommand: 'test',
-                        targetLabel: '//src:test',
+                        targetLabel: '//@angular/bazel/src:test',
                     },
                 }, indent);
             }
