diff --git a/node_modules/@angular/bazel/src/external.bzl b/node_modules/@angular/bazel/src/external.bzl
index 32b640a..a787bbb 100755
--- a/node_modules/@angular/bazel/src/external.bzl
+++ b/node_modules/@angular/bazel/src/external.bzl
@@ -2,11 +2,11 @@
 """
 
 load(
-    "@npm_bazel_typescript//internal:build_defs.bzl",
+    "@npm//@bazel/typescript/internal:build_defs.bzl",
     _tsc_wrapped_tsconfig = "tsc_wrapped_tsconfig",
 )
 load(
-    "@npm_bazel_typescript//internal:common/compilation.bzl",
+    "@npm//@bazel/typescript/internal:common/compilation.bzl",
     _COMMON_ATTRIBUTES = "COMMON_ATTRIBUTES",
     _COMMON_OUTPUTS = "COMMON_OUTPUTS",
     _DEPS_ASPECTS = "DEPS_ASPECTS",
@@ -14,17 +14,19 @@ load(
     _ts_providers_dict_to_struct = "ts_providers_dict_to_struct",
 )
 load(
-    "@npm_bazel_typescript//internal:ts_config.bzl",
+    "@npm//@bazel/typescript/internal:ts_config.bzl",
     _TsConfigInfo = "TsConfigInfo",
 )
 load(
     "@build_bazel_rules_nodejs//:providers.bzl",
+    _LinkablePackageInfo = "LinkablePackageInfo",
     _NpmPackageInfo = "NpmPackageInfo",
     _js_ecma_script_module_info = "js_ecma_script_module_info",
     _js_named_module_info = "js_named_module_info",
     _node_modules_aspect = "node_modules_aspect",
 )
 
+LinkablePackageInfo = _LinkablePackageInfo
 NpmPackageInfo = _NpmPackageInfo
 node_modules_aspect = _node_modules_aspect
 
diff --git a/node_modules/@angular/bazel/src/ng_module.bzl b/node_modules/@angular/bazel/src/ng_module.bzl
index a38f6a8..436d83b 100755
--- a/node_modules/@angular/bazel/src/ng_module.bzl
+++ b/node_modules/@angular/bazel/src/ng_module.bzl
@@ -13,6 +13,7 @@ load(
     "DEFAULT_NG_COMPILER",
     "DEFAULT_NG_XI18N",
     "DEPS_ASPECTS",
+    "LinkablePackageInfo",
     "NpmPackageInfo",
     "TsConfigInfo",
     "compile_ts",
@@ -629,6 +630,15 @@ def _ng_module_impl(ctx):
         # once it is no longer needed.
     ])
 
+    if ctx.attr.module_name:
+        path = "/".join([p for p in [ctx.bin_dir.path, ctx.label.workspace_root, ctx.label.package] if p])
+        ts_providers["providers"].append(LinkablePackageInfo(
+            package_name = ctx.attr.module_name,
+            path = path,
+            files = ts_providers["typescript"]["es5_sources"],
+            _tslibrary = True,
+        ))
+
     return ts_providers_dict_to_struct(ts_providers)
 
 local_deps_aspects = [node_modules_aspect, _collect_summaries_aspect]
