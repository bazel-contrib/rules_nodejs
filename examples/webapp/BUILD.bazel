# TODO(alexeagle): promote web_package rule to the public API
load("@build_bazel_rules_nodejs//internal/web_package:web_package.bzl", "web_package")
load("@npm//@babel/cli:index.bzl", "babel")
load("@npm//http-server:index.bzl", "http_server")
load("@npm_bazel_protractor//:index.bzl", "protractor_web_test_suite")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")
load("@npm_bazel_terser//:index.bzl", "terser_minified")

rollup_bundle(
    name = "chunks",
    srcs = glob(["*.js"]),
    entry_point = "index.js",
    output_dir = True,
)

# For older browsers, we'll transform the output chunks to es5 + systemjs loader
babel(
    name = "chunks_es5",
    args = [
        "$(location chunks)",
        "--config-file",
        "$(location es5.babelrc)",
        "--out-dir",
        "$@",
    ],
    data = [
        "chunks",
        "es5.babelrc",
        "@npm//@babel/preset-env",
    ],
    output_dir = True,
)

# Run terser against both modern and legacy browser chunks
terser_minified(
    name = "chunks_es5.min",
    src = "chunks_es5",
)

terser_minified(
    name = "chunks.min",
    src = "chunks",
)

web_package(
    name = "package",
    # FIXME: need something like:
    # entry_point = "index.js",
    assets = [
        "styles.css",
    ],
    data = [
        "favicon.png",
        # For differential loading, we supply both ESModule chunks and es5 chunks.
        # The injector will put two complimentary script tags in the index.html
        ":chunks.min",
        ":chunks_es5.min",
    ],
    index_html = "index.html",
)

http_server(
    name = "server",
    data = [":package"],
    templated_args = ["package"],
)

# BazelCI docker images are missing shares libs to run a subset browser tests:
# mac: firefox does not work, chrome works
# ubuntu: firefox and chrome do not work --- there are 0 tests to run
# windows: firefox works, chrome does not work
# TODO(gregmagolan): support firefox in protractor rule
protractor_web_test_suite(
    name = "server_test",
    srcs = ["app.spec.js"],
    on_prepare = ":protractor.on-prepare.js",
    server = ":server",
    tags = [
        "no-bazelci-ubuntu",
        "no-bazelci-windows",
    ],
)

# Just a dummy test so that we have a test target for //... on certain bazelci platforms with bazel_integration_test
sh_test(
    name = "dummy_test",
    srcs = ["dummy_test.sh"],
)

# For testing from the root workspace of this repository with bazel_integration_test.
filegroup(
    name = "all_files",
    srcs = glob(
        include = ["**/*"],
        exclude = [
            "bazel-out/**/*",
            "dist/**/*",
            "node_modules/**/*",
        ],
    ),
    visibility = ["//visibility:public"],
)
