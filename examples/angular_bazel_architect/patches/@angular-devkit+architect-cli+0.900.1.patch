diff --git a/node_modules/@angular-devkit/architect-cli/bin/architect.js b/node_modules/@angular-devkit/architect-cli/bin/architect.js
index 65a779f..ba9f44c 100755
--- a/node_modules/@angular-devkit/architect-cli/bin/architect.js
+++ b/node_modules/@angular-devkit/architect-cli/bin/architect.js
@@ -70,6 +70,13 @@ async function _executeTarget(parentLogger, workspace, root, argv, registry) {
     logger.subscribe(entry => logs.push({ ...entry, message: `${entry.name}: ` + entry.message }));
     const run = await architect.scheduleTarget(targetSpec, argv, { logger });
     const bars = new progress_1.MultiProgressBar(':name :bar (:current/:total) :status');
+    const exit = process.exit.bind(process);
+    process.exit = (code) => {
+        if(code != 0) {
+            console.error('Exiting with code ', code, new Error().stack);
+        }
+        exit(code);
+    };
     run.progress.subscribe(update => {
         const data = bars.get(update.id) || {
             id: update.id,
@@ -154,8 +161,6 @@ async function main(args) {
     const registry = new core_1.schema.CoreSchemaRegistry();
     registry.addPostTransform(core_1.schema.transforms.addUndefinedDefaults);
     const { workspace } = await core_1.workspaces.readWorkspace(configFilePath, core_1.workspaces.createWorkspaceHost(new node_2.NodeJsSyncHost()));
-    // Clear the console.
-    process.stdout.write('\u001Bc');
     return await _executeTarget(logger, workspace, root, argv, registry);
 }
 main(process.argv.slice(2)).then(code => {
