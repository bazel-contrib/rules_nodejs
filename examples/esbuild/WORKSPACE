# Copyright 2019 The Bazel Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

workspace(
    name = "examples_esbuild",
    managed_directories = {"@npm": ["node_modules"]},
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "build_bazel_rules_nodejs",
    sha256 = "659dfa20721ff324d5e9d198d8bf3d8c74ef6563a7223d9c4974a0ca1e66dbf0",
    urls = ["https://github.com/bazelbuild/rules_nodejs/releases/download/4.0.0-rc.0/rules_nodejs-4.0.0-rc.0.tar.gz"],
)

load("@build_bazel_rules_nodejs//:index.bzl", "npm_install")

npm_install(
    name = "npm",
    package_json = "//:package.json",
    package_lock_json = "//:package-lock.json",
)

# This is the simpler way to load, however it eagerly fetches all of the npm
# dependencies for every build due to this load statement, whether the build
# needs them or not.
# load("@npm//@bazel/esbuild:esbuild_repositories.bzl", "esbuild_repositories")

# We can avoid that eager fetch by loading esbuild_repositories
# from a separately-fetched npm package.
http_archive(
    name = "bazel_esbuild",
    strip_prefix = "package",
    urls = [
        # TODO(alexeagle): how to keep this version up-to-date as we cut releases?
        "https://registry.npmjs.org/@bazel/esbuild/-/esbuild-4.0.0-rc.0.tgz",
    ],
)

load("@bazel_esbuild//:esbuild_repositories.bzl", "esbuild_repositories")

esbuild_repositories()
