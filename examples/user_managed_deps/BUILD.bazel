load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@npm_bazel_jasmine//:index.from_src.bzl", "jasmine_node_test")

# Make the jasmine library available at runtime by exposing our node_modules
# directory.
# This is "user-managed" dependencies - Bazel knows nothing about our package manager.
# We assume that developers will install the `node_modules` directory themselves and
# keep it up-to-date.
# This rule simply exposes files in the node_modules directory to Bazel so it can read
# them as inputs to processes it spawns.
filegroup(
    name = "node_modules",
    srcs = glob([
        "node_modules/**/*.js",
        "node_modules/**/*.d.ts",
        "node_modules/**/*.json",
    ]),
)

filegroup(
    name = "decrement",
    srcs = ["decrement.js"],
)

filegroup(
    name = "program",
    srcs = ["index.js"],
)

nodejs_binary(
    name = "example",
    # Every execution of the program gets these arguments added
    args = ["--node_options=--expose-gc"],
    data = [
        "index.js",
        "//:node_modules",
    ],
    entry_point = ":index.js",
)

jasmine_node_test(
    name = "test",
    srcs = glob(["*.spec.js"]),
    jasmine_deps = [],
    node_modules = "//:node_modules",
    deps = [
        ":decrement",
        ":program",
    ],
)
