# For the notes in this file see:
# https://github.com/bazelbuild/rules_nodejs/issues/84
# https://github.com/bazelbuild/bazel/issues/1262
# https://docs.google.com/document/d/1qPOUeoqDA3eWFFXS1shWX1FT3e4BQB8yuSMrfQL4QrA

load("@build_bazel_rules_nodejs//:defs.bzl", "babel_library")
load("@build_bazel_rules_nodejs//:defs.bzl", "rollup_bundle")
load("@build_bazel_rules_nodejs//:internal/common/typescript_mock_devserver.bzl", "mock_typescript_devserver")

babel_library(
    name = "module",
    srcs = ["module.js"],
    babel = "@devserver_example_yarn_install//@bazel/babel/bin:babel",
)

babel_library(
    name = "test",
    srcs = ["test.js"],
    babel = "@devserver_example_yarn_install//@bazel/babel/bin:babel",
    # Note: This rc file will only be found by babel when run in the devserver_example workspace
    # but not in the top-level one, due to how bazel currently handels pathing
    data = [
        "//:.browserslistrc",
    ],
    deps = [
        ":module",
        "//src/dir:module",
        "//src/my_lib_folder:my_lib",
    ],
)

mock_typescript_devserver(
    name = "devserver",
    # Note: This will only work now when called from the top-level workspace, otherwise it would
    # just be src/test
    entry_module = "external/devserver_example/src/test",
    port = 8080,
    serving_path = "/bundle.js",
    deps = [
        ":test",
    ],
)

rollup_bundle(
    name = "bundle",
    # Note: This will only work now when called from the top-level workspace, otherwise it would
    # just be src/test.js
    entry_point = "external/devserver_example/src/test.js",
    node_modules = "@devserver_example_yarn_install//:node_modules",
    deps = [
        ":test",
    ],
)
