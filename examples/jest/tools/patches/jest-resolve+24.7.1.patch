diff --git a/node_modules/jest-resolve/build/defaultResolver.js b/node_modules/jest-resolve/build/defaultResolver.js
index 64e7387..b5b74d3 100644
--- a/node_modules/jest-resolve/build/defaultResolver.js
+++ b/node_modules/jest-resolve/build/defaultResolver.js
@@ -137,7 +137,7 @@ function resolveSync(target, options) {
     if (result) {
       // Dereference symlinks to ensure we don't create a separate
       // module instance depending on how it was referenced.
-      result = _fs().default.realpathSync(result);
+      // result = _fs().default.realpathSync(result);
     }

     return result;
diff --git a/node_modules/jest-resolve/build/index.js b/node_modules/jest-resolve/build/index.js
index 8e6bfe0..c3a9f27 100644
--- a/node_modules/jest-resolve/build/index.js
+++ b/node_modules/jest-resolve/build/index.js
@@ -57,7 +57,7 @@ function _defineProperty(obj, key, value) {
 const NATIVE_PLATFORM = 'native'; // We might be inside a symlink.

 const cwd = process.cwd();
-const resolvedCwd = (0, _realpathNative().sync)(cwd) || cwd;
+const resolvedCwd = cwd;
 const nodePaths = process.env.NODE_PATH
   ? process.env.NODE_PATH.split(_path().default.delimiter)
       .filter(Boolean) // The resolver expects absolute paths.
diff --git a/node_modules/jest-resolve/build/nodeModulesPaths.js b/node_modules/jest-resolve/build/nodeModulesPaths.js
index 8d9d10f..5d55456 100644
--- a/node_modules/jest-resolve/build/nodeModulesPaths.js
+++ b/node_modules/jest-resolve/build/nodeModulesPaths.js
@@ -55,14 +55,7 @@ function nodeModulesPaths(basedir, options) {
   } // The node resolution algorithm (as implemented by NodeJS and TypeScript)
   // traverses parents of the physical path, not the symlinked path

-  let physicalBasedir;
-
-  try {
-    physicalBasedir = (0, _realpathNative().sync)(basedirAbs);
-  } catch (err) {
-    // realpath can throw, e.g. on mapped drives
-    physicalBasedir = basedirAbs;
-  }
+  let physicalBasedir = basedirAbs;

   const paths = [physicalBasedir];

