# Copyright 2017 The Bazel Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("@build_bazel_rules_nodejs//:defs.bzl", "npm_package")
load("@build_bazel_rules_nodejs//internal/js_library:js_library.bzl", "js_library")
load("//:index.bzl", "TYPESCRIPT_REPLACEMENTS")

bzl_library(
    name = "bzl",
    srcs = glob(["*.bzl"]),
    visibility = ["//docs:__pkg__"],
    deps = [
        "//internal:bzl",
        "//internal/devserver:bzl",
        "//internal/protobufjs:bzl",
        "@build_bazel_rules_nodejs//internal/common:bzl",
    ],
)

exports_files([
    "index.docs.bzl",  # For generating documentation
])

genrule(
    name = "copy_LICENSE",
    srcs = ["@build_bazel_rules_nodejs//:LICENSE"],
    outs = ["LICENSE"],
    cmd = "cp $< $@",
)

# Ugly genrule depending on local linux environment to build the README out of skylark doc generation.
# Only referenced when we do a release.
# TODO: This ought to be possible with stardoc alone. Need to coordinate with Chris Parsons.
genrule(
    name = "generate_README",
    srcs = [
        "//docs:index.md",
        "//docs:install.md",
    ],
    outs = ["README.md"],
    cmd = """cat docs/install.md $(location //docs:index.md) | sed 's/^##/\\\n##/' > $@""",
)

npm_package(
    name = "npm_package",
    srcs = [
        "BUILD.bazel",
        "defs.bzl",
        "index.bzl",
        "package.bzl",
        "package.json",
        "version.bzl",
        "//devserver:npm_package_assets",
        "//internal:npm_package_assets",
        "//ts_auto_deps:npm_package_assets",
    ],
    packages = [
        "@build_bazel_rules_typescript//:npm_bazel_typescript_package",
    ],
    replacements = TYPESCRIPT_REPLACEMENTS,
    vendor_external = ["build_bazel_rules_typescript"],
    deps = [
        ":copy_LICENSE",
        ":generate_README",
    ],
)

# Runtime libraries needed by the protobufjs library.
# Any JS code produced by the ts_proto_library rule has a runtime dependency on these scripts.
js_library(
    name = "protobufjs_bootstrap_scripts",
    srcs = [
        "@build_bazel_rules_typescript_protobufs_compiletime_deps//node_modules/long:dist/long.js",
        "@build_bazel_rules_typescript_protobufs_compiletime_deps//node_modules/protobufjs:dist/minimal/protobuf.min.js",
    ],
    # Make devmode loading work when it does require("protobufjs/minimal")
    # so this is shimmed to define it to equal global.protobuf
    amd_names = {
        "long": "Long",
        "protobufjs/minimal": "protobuf",
    },
    visibility = ["//visibility:public"],
)
