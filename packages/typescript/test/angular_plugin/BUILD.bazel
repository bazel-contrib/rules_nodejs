load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")

# Custom ts_library compiler that runs tsc_wrapped with angular/compiler-cli statically linked
# This can be used with worker mode because we don't need the linker at runtime to make
# the angular plugin loadable
# Just a clone of @build_bazel_rules_typescript//internal:tsc_wrapped with added deps
nodejs_binary(
    name = "tsc_wrapped_with_angular",
    data = [
        "@build_bazel_rules_typescript//internal:tsc_wrapped",
        "@build_bazel_rules_typescript//third_party/github.com/bazelbuild/bazel/src/main/protobuf:worker_protocol.proto",
        "@npm//@angular/compiler-cli",
        "@npm//protobufjs",
        "@npm//source-map-support",
        "@npm//tsickle",
        "@npm//tsutils",
        "@npm//typescript",
    ],
    entry_point = "@build_bazel_rules_typescript//internal:tsc_wrapped/tsc_wrapped.js",
    # TODO: turn on --worker_sandboxing and remove this flag to see failure to load the plugin
    templated_args = ["--bazel_patch_module_resolver"],
    visibility = ["//packages/typescript/test/angular_plugin:__subpackages__"],
)
