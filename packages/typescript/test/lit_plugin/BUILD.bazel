# Copyright 2017 The Bazel Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("//packages/typescript:index.bzl", "ts_library")

# Custom ts_library compiler that runs tsc_wrapped with ts-lit-plugin statically linked
# This can be used with worker mode because we don't need the linker at runtime to make
# the plugin loadable
# Just a clone of @build_bazel_rules_typescript//internal:tsc_wrapped with added deps
nodejs_binary(
    name = "tsc_wrapped_with_lit_plugin",
    data = [
        "@build_bazel_rules_typescript//internal:tsc_wrapped",
        "@build_bazel_rules_typescript//third_party/github.com/bazelbuild/bazel/src/main/protobuf:worker_protocol.proto",
        "@npm//protobufjs",
        "@npm//source-map-support",
        "@npm//ts-lit-plugin",
        "@npm//tsickle",
        "@npm//tsutils",
        "@npm//typescript",
    ],
    entry_point = "@build_bazel_rules_typescript//internal:tsc_wrapped/tsc_wrapped.js",
    # TODO: turn on --worker_sandboxing and remove this flag to see failure to load the plugin
    templated_args = ["--bazel_patch_module_resolver"],
    visibility = ["//packages/typescript/test/angular_plugin:__subpackages__"],
)

ts_library(
    name = "lit_plugin",
    srcs = glob(["*.ts"]),
    compiler = "tsc_wrapped_with_lit_plugin",
    expected_diagnostics = [
        """TS2322: \\[lit\\] Unknown tag "unknown-element". Did you mean 'lit-element'?""",
        "TS2322: \\[lit\\] Type '222' is not assignable to 'string",
        "TS2322: \\[lit\\] Type '333' is not assignable to 'string",
        """TS2322: \\[lit\\] Type '"aaa"' is not assignable to 'number'""",
        """TS2322: \\[lit\\] Type '"ccc"' is not assignable to 'number'""",
        "TS2322: \\[lit\\] Type '444' is not assignable to 'string",
        "TS2322: \\[lit\\] Type '{ field: number; }' is not assignable to '{ field: string; }'",
    ],
    tsconfig = ":tsconfig.json",
    deps = [
        "@npm//lit-element",
    ],
)
