load("//packages/esbuild:index.bzl", "esbuild")
load("//packages/jasmine:index.bzl", "jasmine_node_test")
load("//packages/typescript:index.bzl", "ts_project")

ts_project(
    name = "main",
    srcs = [
        "main.ts",
    ],
    tsconfig = {
        "compilerOptions": {
            "sourceMap": True,
            "inlineSourceMap": False,
            "inlineSources": True,
        },
    },
    deps = [
        "@npm//@types/node",
    ],
)

esbuild(
    name = "bundle_default",
    args = {
        "keepNames": True,
    },
    entry_point = "main.ts",
    deps = [":main"],
)

esbuild(
    name = "bundle_sources_content",
    args = {
        "keepNames": True,
    },
    entry_point = "main.ts",
    sourcemap = "",
    sources_content = True,
    deps = [":main"],
)

esbuild(
    name = "bundle_inline",
    args = {
        "keepNames": True,
    },
    entry_point = "main.ts",
    sourcemap = "inline",
    deps = [":main"],
)

esbuild(
    name = "bundle_external",
    args = {
        "keepNames": True,
    },
    entry_point = "main.ts",
    sourcemap = "external",
    deps = [":main"],
)

esbuild(
    name = "bundle_both",
    args = {
        "keepNames": True,
    },
    entry_point = "main.ts",
    sourcemap = "both",
    deps = [":main"],
)

jasmine_node_test(
    name = "bundle_test",
    srcs = ["bundle_test.js"],
    data = [
        ":bundle_both",
        ":bundle_default",
        ":bundle_external",
        ":bundle_inline",
        ":bundle_sources_content",
    ],
)
