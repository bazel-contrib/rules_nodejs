load("//packages/esbuild:index.bzl", "esbuild", "esbuild_config")
load("//packages/jasmine:index.bzl", "jasmine_node_test")
load("//packages/concatjs:index.bzl", "ts_library")
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "string_flag")

ts_library(
    name = "main",
    srcs = [
        "main.ts",
    ],
    deps = [
        "@npm//@types/node",
    ],
)

esbuild(
    name = "bundle",
    srcs = [
        "shim.js",
    ],
    args = {
        "inject": ["$(execpath :shim.js)"],
        "keepNames": True,
    },
    define = {
        "process.env.NODE_ENV": "\"defined_in_bundle\"",
        "SOME_TEST_ENV": "'$(SOME_TEST_ENV)'",
    },
    define_settings = {
        ":some_bool_flag": "SOME_BOOL_FLAG_VALUE",
        ":some_string_flag": "SOME_STRING_FLAG_VALUE",
    },
    entry_point = "main.ts",
    deps = [":main"],
)

esbuild_config(
    name = "esbuild_config",
    config_file = "esbuild.config.mjs",
)

esbuild(
    name = "stamped_bundle",
    args = {
        "keepNames": True,
    },
    config = ":esbuild_config",
    define = {
        # defines defined on the rule take precedence over defines defined in the config, defined above
        "process.env.NODE_ENV": "\"defined_on_rule\"",
        "SOME_TEST_ENV": "'$(SOME_TEST_ENV)'",
    },
    define_settings = {
        ":some_bool_flag": "SOME_BOOL_FLAG_VALUE",
        ":some_string_flag": "SOME_STRING_FLAG_VALUE",
    },
    entry_point = "main.ts",
    stamp = "@rules_nodejs//nodejs/stamp:always",
    deps = [":main"],
)

jasmine_node_test(
    name = "bundle_test",
    srcs = ["bundle_test.js"],
    data = [
        ":bundle",
        ":stamped_bundle",
    ],
)

bool_flag(
    name = "some_bool_flag",
    build_setting_default = True,
)

string_flag(
    name = "some_string_flag",
    build_setting_default = "default_`'\"flag\"'`_value",
)
