load("@build_bazel_rules_nodejs//:defs.bzl", "nodejs_binary")

# BEGIN-INTERNAL
load("@npm_bazel_typescript//:defs.bzl", "ts_library")

ts_library(
    name = "cli_lib",
    srcs = glob(["*.ts"]),
    deps = [
        "@npm//@types",
    ],
)

filegroup(
    name = "package_contents",
    srcs = [
        "BUILD.bazel",
        "webpack_bundle.bzl",
    ],
    visibility = ["//webpack:__subpackages__"],
)
# END-INTERNAL

nodejs_binary(
    name = "cli",
    data = [
        # BEGIN-INTERNAL
        # For local development, we depend on the TypeScript output
        ":cli_lib",
        # END-INTERNAL

        # For external usage, we depend on the published .JS files
        #@external "@npm//@bazel/labs",
        "@npm//webpack",
    ],
    # BEGIN-INTERNAL
    # For local development, our module has this AMD name
    entry_point = "npm_bazel_labs/webpack/src/cli.js",
    # END-INTERNAL
    # For external usage, we resolve the module from node_modules
    #@external entry_point = "@bazel/labs/webpack/src/cli.js",
    visibility = ["//visibility:public"],
)
