{
    "name": "@bazel/javascript",
    "description": "Build JavaScript with Bazel",
    "version": "0.15.3",
    "keywords": [
        "javascript",
        "bazel"
    ],
    "homepage": "https://github.com/bazelbuild/rules_nodejs",
    "license": "Apache-2.0",
    "devDependencies": {
        "clang-format": "1.2.2",
        "husky": "^0.14.3",
        "shelljs": "^0.8.2"
    },
    "scripts": {
        "//nested workspace tests": "Run bazel from within the folder containing the WORKSPACE so that the WORKSPACE files is tested",
        "examples-bazel_managed_deps": "cd examples/bazel_managed_deps && yarn test",
        "examples-program": "cd examples/program && yarn test",
        "examples-packages": "cd examples/packages && yarn test",
        "examples-vendored_node": "cd examples/vendored_node && yarn test",
        "internal-e2e-node_loader_no_preserve_symlinks": "cd internal/e2e/node_loader_no_preserve_symlinks && yarn test",
        "internal-e2e-node_loader_preserve_symlinks": "cd internal/e2e/node_loader_preserve_symlinks && yarn test",
        "test": "yarn examples-bazel_managed_deps && yarn examples-packages && yarn examples-program && yarn examples-vendored_node && yarn internal-e2e-node_loader_no_preserve_symlinks && yarn internal-e2e-node_loader_preserve_symlinks",
        "prebuildifier": "bazel build --noshow_progress @com_github_bazelbuild_buildtools//buildifier",
        "buildifier": "find . -type f \\( -name BUILD -or -name BUILD.bazel \\) ! -path \"*/node_modules/*\" | xargs $(bazel info bazel-bin)/external/com_github_bazelbuild_buildtools/buildifier/*/buildifier",
        "preskylint": "bazel build --noshow_progress @io_bazel//src/tools/skylark/java/com/google/devtools/skylark/skylint:Skylint",
        "//": "which cannot be upgraded to modern providers without breaking compatability",
        "skylint": "find . -type f -name \"*.bzl\" ! -path \"*/node_modules/*\" | xargs $(bazel info bazel-bin)/external/io_bazel/src/tools/skylark/java/com/google/devtools/skylark/skylint/Skylint --disable-checks=deprecated-api",
        "format": "git-clang-format",
        "format-all": "clang-format --glob='{internal/**/,examples/**/}*.{js,ts}' -i",
        "precommit": "check-clang-format \"yarn format\"",
        "skydoc": "bazel build --symlink_prefix=bazel- //docs && unzip -o -d docs bazel-bin/docs/docs-skydoc.zip",
        "version": "node ./on-version.js && git stage package.bzl"
    }
}
