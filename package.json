{
    "name": "@bazel/javascript",
    "description": "Build JavaScript with Bazel",
    "version": "2.0.0-rc.2",
    "keywords": [
        "javascript",
        "bazel"
    ],
    "homepage": "https://github.com/bazelbuild/rules_nodejs",
    "repository": "https://github.com/bazelbuild/rules_nodejs",
    "license": "Apache-2.0",
    "engines": {
        "node": ">=12.0.0 < 13",
        "yarn": ">=1.13.0"
    },
    "devDependencies": {
        "@angular/common": "^9.1.0",
        "@angular/compiler": "^9.1.0",
        "@angular/compiler-cli": "^9.1.0",
        "@angular/core": "^9.1.0",
        "@babel/cli": "^7.6.2",
        "@babel/core": "^7.6.2",
        "@babel/preset-env": "^7.6.2",
        "@bazel/bazelisk": "^1.5.0",
        "@bazel/buildifier": "^3.2.0",
        "@bazel/buildozer": "^3.2.0",
        "@bazel/ibazel": "^0.13.1",
        "@commitlint/cli": "^8.0.0",
        "@commitlint/config-conventional": "^8.0.0",
        "@gregmagolan/test-a": "0.0.5",
        "@types/hammerjs": "2.0.35",
        "@types/jasmine": "~3.3.13",
        "@types/jest": "24.9.0",
        "@types/node": "^12.0.0",
        "@types/semver": "6.2.0",
        "babel-jest": "^25.5.1",
        "bazel_workspaces": "file:./tools/npm_packages/bazel_workspaces",
        "bazel_workspaces_consistent": "file:./tools/npm_packages/bazel_workspaces_consistent",
        "clang-format": "1.2.2",
        "conventional-changelog-cli": "^2.0.21",
        "core-util-is": "^1.0.2",
        "date-fns": "1.30.1",
        "google-protobuf": "^3.6.1",
        "grpc-web": "1.1.0",
        "hello": "file:./tools/npm_packages/hello",
        "history-server": "^1.3.1",
        "http-server": "^0.11.1",
        "husky": "1.3.1",
        "is-builtin-module": "3.0.0",
        "jasmine": "~3.4.0",
        "jasmine-core": "~3.4.0",
        "jasmine-reporters": "~2.3.2",
        "jest": "~25.3.0",
        "jest-websocket-mock": "~2.0.2",
        "karma": "~4.1.0",
        "karma-chrome-launcher": "2.2.0",
        "karma-firefox-launcher": "1.1.0",
        "karma-jasmine": "2.0.1",
        "karma-requirejs": "1.1.0",
        "karma-sourcemap-loader": "0.3.7",
        "lit-element": "^2.2.1",
        "minimist": "^1.2.3",
        "mock-socket": "~9.0.3",
        "node_resolve_index": "file:./tools/npm_packages/node_resolve_index",
        "node_resolve_index_2": "file:./tools/npm_packages/node_resolve_index_2",
        "node_resolve_index_3": "file:./tools/npm_packages/node_resolve_index_3",
        "node_resolve_index_4": "file:./tools/npm_packages/node_resolve_index_4",
        "node_resolve_main": "file:./tools/npm_packages/node_resolve_main",
        "node_resolve_main_2": "file:./tools/npm_packages/node_resolve_main_2",
        "node_resolve_nested_main": "file:./tools/npm_packages/node_resolve_nested_main",
        "npm": "6.13.7",
        "patch-package": "^6.2.2",
        "protobufjs": "6.8.8",
        "protractor": "^5.4.2",
        "requirejs": "2.3.6",
        "rollup": "1.3.1",
        "rollup-plugin-amd": "3.0.0",
        "rollup-plugin-commonjs": "9.3.4",
        "rollup-plugin-json": "4.0.0",
        "rollup-plugin-node-resolve": "4.2.4",
        "rxjs": "^6.5.2",
        "semver": "5.6.0",
        "shelljs": "0.8.3",
        "sinon": "^7.3.2",
        "source-map": "^0.7.3",
        "source-map-support": "0.5.9",
        "terser": "4.4.0",
        "testy": "file:./tools/npm_packages/testy",
        "tmp": "0.1.0",
        "ts-lit-plugin": "1.1.9",
        "tsickle": "0.38.0",
        "tsutils": "2.27.2",
        "typeorm": "0.2.18",
        "typescript": "^3.7.5",
        "unidiff": "1.0.1",
        "yarn": "1.22.0",
        "c8": "7.1.0",
        "zone.js": "0.8.29"
    },
    "// resolutions/**/jest-serializer": "need to resolve to a version that doesn't have a /// <reference path='../v8.d.ts' /> in build/index.d.ts which exposes a bug in ts_library",
    "resolutions": {
        "**/jest-serializer": "24.3.0"
    },
    "scripts": {
        "test": "bazel test --test_tag_filters=-e2e,-examples,-manual,-browser:firefox-local",
        "test_windows": "bazel test --test_tag_filters=-e2e,-examples,-fix-windows,-manual,-browser:firefox-local",
        "test_e2e": "bazel --host_jvm_args=-Xms256m --host_jvm_args=-Xmx1280m test --test_tag_filters=e2e --local_ram_resources=792 --test_arg=--local_ram_resources=13288",
        "test_examples": "bazel --host_jvm_args=-Xms256m --host_jvm_args=-Xmx1280m test --test_tag_filters=examples --local_ram_resources=792 --test_arg=--local_ram_resources=13288",
        "run_integration_test": "bazel --host_jvm_args=-Xms256m --host_jvm_args=-Xmx1280m run --local_ram_resources=792 --test_arg=--local_ram_resources=13288",
        "run_integration_test_debug": "yarn run_integration_test --define=BAZEL_INTEGRATION_TEST_DEBUG=1",
        "test_all": "./scripts/test_all.sh",
        "clean_all": "./scripts/clean_all.sh",
        "// Unchecked warnings": "The following warnings are not checked as disabling them locally is broken",
        "//   rule-impl-return": "./internal/common/typescript_mock_lib.bzl:29: rule-impl-return: Avoid using the legacy provider syntax. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#rule-impl-return)",
        "//   rule-impl-return(2)": "./packages/typescript/internal/protobufjs/ts_proto_library.bzl:105: rule-impl-return: Avoid using the legacy provider syntax. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#rule-impl-return)",
        "//   uninitialized": "./internal/node/node.bzl:95: uninitialized: Variable 'd' may not have been initialized. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#uninitialized)",
        "//   uninitialized(2)": "./internal/node/node.bzl:95: uninitialized: Variable 'd' may not have been initialized. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#uninitialized)",
        "//   uninitialized(3)": "./packages/typescript/internal/build_defs.bzl:95: uninitialized: Variable 'output' may not have been initialized. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#uninitialized)",
        "//   no-effect": "./internal/npm_install/npm_install.bzl:228: no-effect: Expression result is not used. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#no-effect)",
        "//   no-effect(2)": "./internal/npm_install/npm_install.bzl:325: no-effect: Expression result is not used. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#no-effect)",
        "bazel:format": "find . -type f \\( -name \"*.bzl\" -or -name WORKSPACE -or -name BUILD -or -name BUILD.bazel \\) ! -path \"*/node_modules/*\" ! -path \"./dist/*\" ! -path \"./release/*\" ! -path \"./third_party/*\" | xargs buildifier -v --warnings=attr-cfg,attr-license,attr-non-empty,attr-output-default,attr-single-file,confusing-name,constant-glob,ctx-actions,ctx-args,depset-iteration,depset-union,dict-concatenation,duplicated-name,filetype,function-docstring,git-repository,http-archive,integer-division,load,load-on-top,module-docstring,name-conventions,native-build,native-package,out-of-order-load,output-group,package-name,package-on-top,positional-args,redefined-variable,repository-name,return-value,same-origin-load,string-iteration,unreachable,unsorted-dict-items,unused-variable",
        "bazel:format-check": "yarn bazel:format --mode=check",
        "bazel:lint": "yarn bazel:format --lint=warn",
        "bazel:lint-fix": "yarn bazel:format --lint=fix",
        "// See comment in .bazelrc": "",
        "bazel:update-deleted-packages": "sed -i.bak \"/--deleted_packages/s#=.*#=$(find {examples,e2e}/*/* \\( -name BUILD -or -name BUILD.bazel \\) | xargs -n 1 dirname | paste -sd, -)#\" .bazelrc && rm .bazelrc.bak",
        "update-codeowners": "./scripts/update_codeowners.sh",
        "format": "git-clang-format",
        "format-all": "clang-format --glob='{internal/**/,examples/**/}*.{js,ts}' -i",
        "stardoc": "bazel build //docs && cp -f dist/bin/docs/*.md docs",
        "version": "conventional-changelog -p angular -i CHANGELOG.md -s && node ./scripts/on-version.js && bazel build //:release && node ./scripts/on-release.js && git stage version.bzl docs/install.md packages/create/index.js README.md CHANGELOG.md e2e/*/WORKSPACE examples/*/WORKSPACE",
        "postinstall": "patch-package && node internal/npm_install/test/postinstall.js"
    },
    "husky": {
        "hooks": {
            "pre-commit": "check-clang-format \"yarn format\"",
            "pre-push": "yarn bazel:format-check && yarn bazel:lint",
            "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
        }
    }
}
