{
    "name": "@bazel/javascript",
    "description": "Build JavaScript with Bazel",
    "version": "0.31.1",
    "keywords": [
        "javascript",
        "bazel"
    ],
    "homepage": "https://github.com/bazelbuild/rules_nodejs",
    "license": "Apache-2.0",
    "devDependencies": {
        "@bazel/bazel": "0.27.0rc5",
        "@bazel/buildifier": "^0.25.1",
        "@bazel/ibazel": "0.10.1",
        "@commitlint/cli": "^8.0.0",
        "@commitlint/config-conventional": "^8.0.0",
        "@zeit/ncc": "0.18.1",
        "bazel_workspaces": "file:./tools/npm_packages/bazel_workspaces",
        "browserify": "16.2.3",
        "clang-format": "1.2.2",
        "conventional-changelog-cli": "^2.0.21",
        "hello": "file:./tools/npm_packages/hello",
        "husky": "1.3.1",
        "is-builtin-module": "3.0.0",
        "jasmine": "3.4.0",
        "minimist": "^1.2.0",
        "node_resolve_index": "file:./tools/npm_packages/node_resolve_index",
        "node_resolve_index_2": "file:./tools/npm_packages/node_resolve_index_2",
        "node_resolve_index_3": "file:./tools/npm_packages/node_resolve_index_3",
        "node_resolve_index_4": "file:./tools/npm_packages/node_resolve_index_4",
        "node_resolve_main": "file:./tools/npm_packages/node_resolve_main",
        "node_resolve_main_2": "file:./tools/npm_packages/node_resolve_main_2",
        "node_resolve_nested_main": "file:./tools/npm_packages/node_resolve_nested_main",
        "rollup": "1.0.0",
        "rollup-plugin-amd": "^3.0.0",
        "rollup-plugin-commonjs": "^9.2.1",
        "rollup-plugin-json": "4.0.0",
        "rollup-plugin-node-resolve": "~4.2.0",
        "rollup-plugin-sourcemaps": "^0.4.2",
        "shelljs": "0.8.3",
        "terser": "3.17.0",
        "typescript": "^3.3.1",
        "unidiff": "1.0.1",
        "zone.js": "0.8.29"
    },
    "scripts": {
        "build_packages_all": "./scripts/build_packages_all.sh",
        "build_packages": "./scripts/build_packages.sh",
        "build_release": "./scripts/build_release.sh",
        "clean_all": "./scripts/clean_all.sh",
        "test_all": "./scripts/test_all.sh",
        "test_e2e_all": "./scripts/test_e2e_all.sh",
        "test_e2e": "./scripts/test_e2e.sh",
        "test_examples_all": "./scripts/test_examples_all.sh",
        "test_examples": "./scripts/test_examples.sh",
        "test_legacy_e2e_all": "./scripts/test_legacy_e2e_all.sh",
        "test_legacy_e2e": "./scripts/test_legacy_e2e.sh",
        "test_packages_all": "./scripts/test_packages_all.sh",
        "test_packages": "./scripts/test_packages.sh",
        "// Unchecked warnings": "The following warnings are not checked as disabling them locally is broken",
        "//   rule-impl-return": "./internal/common/typescript_mock_lib.bzl:29: rule-impl-return: Avoid using the legacy provider syntax. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#rule-impl-return)",
        "//   rule-impl-return(2)": "./packages/typescript/internal/protobufjs/ts_proto_library.bzl:105: rule-impl-return: Avoid using the legacy provider syntax. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#rule-impl-return)",
        "//   uninitialized": "./internal/node/node.bzl:95: uninitialized: Variable 'd' may not have been initialized. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#uninitialized)",
        "//   uninitialized(2)": "./internal/node/node.bzl:95: uninitialized: Variable 'd' may not have been initialized. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#uninitialized)",
        "//   uninitialized(3)": "./packages/typescript/internal/build_defs.bzl:95: uninitialized: Variable 'output' may not have been initialized. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#uninitialized)",
        "//   no-effect": "./internal/npm_install/npm_install.bzl:228: no-effect: Expression result is not used. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#no-effect)",
        "//   no-effect(2)": "./internal/npm_install/npm_install.bzl:325: no-effect: Expression result is not used. (https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md#no-effect)",
        "bazel:format": "find . -type f \\( -name \"*.bzl\" -or -name WORKSPACE -or -name BUILD -or -name BUILD.bazel \\) ! -path \"*/node_modules/*\" ! -path \"./dist/*\" ! -path \"./third_party/*\" | xargs buildifier -v --warnings=attr-cfg,attr-license,attr-non-empty,attr-output-default,attr-single-file,confusing-name,constant-glob,ctx-actions,ctx-args,depset-iteration,depset-union,dict-concatenation,duplicated-name,filetype,function-docstring,git-repository,http-archive,integer-division,load,load-on-top,module-docstring,name-conventions,native-build,native-package,out-of-order-load,output-group,package-name,package-on-top,positional-args,redefined-variable,repository-name,return-value,same-origin-load,string-iteration,unreachable,unsorted-dict-items,unused-variable",
        "bazel:format-check": "yarn bazel:format --mode=check",
        "bazel:lint": "yarn bazel:format --lint=warn",
        "bazel:lint-fix": "yarn bazel:format --lint=fix",
        "format": "git-clang-format",
        "format-all": "clang-format --glob='{internal/**/,examples/**/}*.{js,ts}' -i",
        "skydoc": "bazel build //docs && unzip -o -d docs dist/bin/docs/docs-skydoc.zip",
        "version": "conventional-changelog -p angular -i CHANGELOG.md -s && node ./scripts/on-version.js && bazel build //:release && node ./scripts/on-release.js && git stage defs.bzl packages/create/index.js README.md CHANGELOG.md"
    },
    "husky": {
        "hooks": {
            "pre-commit": "check-clang-format \"yarn format\"",
            "pre-push": "yarn bazel:format-check && yarn bazel:lint",
            "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
        }
    }
}
