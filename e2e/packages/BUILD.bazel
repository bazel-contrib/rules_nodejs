load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_test")

# This is like a "js_library", but there are no actions to run on JS files so a
# filegroup is semantically equivalent.
filegroup(
    name = "test_version",
    srcs = ["test_version.js"],
)

VARIANTS = [
    "npm_install",
    "yarn_install",
]

[nodejs_test(
    name = "version_" + variant + "_test",
    data = [
        variant + ".spec.js",
        ":test_version",
        "@e2e_packages_" + variant + "//:node_modules",
    ],
    entry_point = ":%s.spec.js" % variant,
    # On Windows, the yarn and npm variants fight over who creates the link
    # [link_node_modules.js] [Error: EEXIST: file already exists, mkdir 'C:\users\b\_bazel_b\p4se2lwa\execroot\e2e_packages\node_modules'] {
    # errno: -4075,
    # code: 'EEXIST',
    # syscall: 'mkdir',
    # path: 'C:\\users\\b\\_bazel_b\\p4se2lwa\\execroot\\e2e_packages\\node_modules'
    # }
    templated_args = ["--nobazel_run_linker"],
) for variant in VARIANTS]

nodejs_test(
    name = "npm_determinism_test",
    data = [
        "npm_determinism.spec.js",
        "@e2e_packages_npm_install//:node_modules/jsesc/package.json",
        "@e2e_packages_npm_install_duplicate_for_determinism_testing//:node_modules",
    ],
    entry_point = ":npm_determinism.spec.js",
    # TODO(gregmagolan): fix this test on windows
    tags = ["fix-windows"],
    # TODO: use runfiles
    templated_args = ["--bazel_patch_module_resolver"],
)

nodejs_test(
    name = "yarn_determinism_test",
    data = [
        "yarn_determinism.spec.js",
        "@e2e_packages_yarn_install//:node_modules/jsesc/package.json",
        "@e2e_packages_yarn_install_duplicate_for_determinism_testing//:node_modules",
    ],
    entry_point = ":yarn_determinism.spec.js",
    # TODO(gregmagolan): fix this test on windows
    tags = ["fix-windows"],
    # TODO: use runfiles
    templated_args = ["--bazel_patch_module_resolver"],
)
