# Configuration file for https://circleci.com/gh/bazelbuild/rules_nodejs

# Note: YAML anchors allow an object to be re-used, reducing duplication.
# The ampersand declares an alias for an object, then later the `<<: *name`
# syntax dereferences it.
# See http://blog.daemonl.com/2016/02/yaml.html
# To validate changes, use an online parser, eg.
# http://yaml-online-parser.appspot.com/

## IMPORTANT
# If you change the `docker_image` version, also change the `cache_key` version
var_1: &docker_image angular/ngcontainer:0.7.0
var_2: &cache_key angular/ngcontainer:0.7.0-{{ .Branch }}-{{ checksum "yarn.lock" }}-examples/rollup:{{ checksum "examples/rollup/yarn.lock" }}-examples/program:{{ checksum "examples/program/yarn.lock" }}-internal/test:{{ checksum "internal/test/yarn.lock" }}-internal/e2e/node_loader_no_preserve_symlinks:{{ checksum "internal/e2e/node_loader_no_preserve_symlinks/yarn.lock" }}-internal/e2e/node_loader_preserve_symlinks:{{ checksum "internal/e2e/node_loader_preserve_symlinks/yarn.lock" }}

# Move node binaries out of the way to enforce that Bazel uses
# only the hermetic ones it downloads
var_3: &hide_node_and_yarn_local_binaries
  run:
    name: Move node, npm, and yarn binaries
    command: |
      sudo mv /usr/local/bin/node /usr/local/bin/node_
      sudo mv /usr/local/bin/npm /usr/local/bin/npm_
      sudo mv /usr/local/bin/yarn /usr/local/bin/yarn_

var_4: &setup_bazelrc
  run:
    name: Setup /etc/bazel.bazelrc
    command: sudo cp .circleci/bazel.rc /etc/bazel.bazelrc

var_5: &setup_bazelrc_legacy_runfiles
  run:
    name: Setup /etc/bazel.bazelrc (with legacy runfiles)
    command: |
      sed -i -e 's/run --nolegacy_external_runfiles//' .bazelrc
      sed -i -e 's/test --nolegacy_external_runfiles//' .bazelrc
      sudo cp .circleci/bazel.rc /etc/bazel.bazelrc

# Settings common to each job
anchor_1: &job_defaults
  working_directory: ~/ng
  docker:
    - image: *docker_image

# After checkout, rebase on top of master.
# Similar to travis behavior, but not quite the same.
# See https://discuss.circleci.com/t/1662
anchor_2: &post_checkout
  post: git pull --ff-only origin "refs/pull/${CI_PULL_REQUEST//*pull\//}/merge"

# Opt-in to the new goodness
version: 2

# These jobs will run in parallel, and report separate statuses to GitHub PRs
jobs:

  # Cannot be run on BuildKite (BazelCI), see
  # https://github.com/bazelbuild/continuous-integration/issues/338
  lint:
    <<: *job_defaults
    steps:
      - checkout:
          <<: *post_checkout
      - *setup_bazelrc

      # Run the skylark linter to check our Bazel rules
      - run: 'yarn skylint ||
              (echo -e "\n.bzl files have lint errors. Please run ''yarn skylint''"; exit 1)'

      # Enforce that BUILD files are formatted.
      - run: 'yarn buildifier -mode=check ||
              (echo "BUILD files not formatted. Please run ''yarn buildifier''" ; exit 1)'

  # Overlaps with testing we do on BuildKite. This is still here because:
  # - BuildKite doesn't have a public results UI; failures here let contributors fix their changes
  # - We hide the node,yarn,npm binaries here which we don't do on BuildKite
  # TODO: port these assertions to BuildKite
  build:
    <<: *job_defaults
    steps:
      - checkout:
          <<: *post_checkout
      - *setup_bazelrc
      - *hide_node_and_yarn_local_binaries
      - restore_cache:
          key: *cache_key

      - run: bazel info release

      - run: bazel run @nodejs//:yarn
      - run: bazel build ...
      - run: bazel test ...
      # TODO(alexeagle): move this into the example proper
      - run: bazel run examples/rollup -- --help

      # These targets should run
      - run: bazel run //internal/node/test:no_deps
      - run: bazel run //internal/node/test:has_deps_legacy
      - run: bazel run //internal/node/test:has_deps
      - run: bazel run //internal/node/test:has_deps_hybrid
      - run: bazel run @fine_grained_deps_yarn//typescript/bin:tsc

      - save_cache:
          key: *cache_key
          paths:
            - "node_modules"
            - "examples/rollup/node_modules"
            - "examples/program/node_modules"
            - "internal/e2e/node_loader_no_preserve_symlinks/node_modules"
            - "internal/e2e/node_loader_preserve_symlinks/node_modules"
            - "internal/test/node_modules"

  test_legacy_runfiles:
    <<: *job_defaults
    steps:
      - checkout:
          <<: *post_checkout
      - *setup_bazelrc_legacy_runfiles
      - *hide_node_and_yarn_local_binaries
      - restore_cache:
          key: *cache_key

      - run: bazel run @nodejs//:yarn

      # We should also be able to test targets in a different workspace
      # TODO(gmagolan): move these tests into `build` job once
      # https://github.com/bazelbuild/bazel/issues/6481 is resolved
      - run: bazel test @program_example//...
      - run: bazel test @packages_example//...

  # This job cannot run on BuildKite (BazelCI) because it requires changing
  # directories to test inside nested workspaces.
  # See https://github.com/bazelbuild/continuous-integration/issues/225
  test:
    <<: *job_defaults
    steps:
      - checkout:
          <<: *post_checkout
      - *setup_bazelrc

      # Not using "bazel run @nodejs//:yarn test" as will attempt to run
      # the "test" script on all folder listed in node_repositories()
      - run: yarn test

workflows:
  version: 2
  default_workflow:
    jobs:
      - lint
      - build
      - test
      - test_legacy_runfiles
