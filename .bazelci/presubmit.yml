---
tasks:
  ubuntu1604:
    name: ubuntu1604
    platform: ubuntu1604
    run_targets:
    - "@nodejs//:yarn"
    - "//internal/node/test:no_deps"
    - "//internal/node/test:has_deps_legacy"
    - "//internal/node/test:has_deps"
    - "//internal/node/test:has_deps_hybrid"
    - "//internal/e2e/fine_grained_no_bin:index"
    - "@fine_grained_deps_yarn//typescript/bin:tsc"
    - "@bazel_workspace_a//:bin"
    - "@bazel_workspace_a//subdir:bin"
    - "@bazel_workspace_b//:bin"
    - "@bazel_workspace_b//subdir:bin"
    build_targets:
    - "//..."
    test_flags:
    - "--test_tag_filters=-e2e,-fix-bazelci-ubuntu"
    test_targets:
    - "//..."
  ubuntu1604_e2e:
    name: ubuntu1604_e2e
    platform: ubuntu1604
    # We need to reduce the memory & CPU usage of the top-level
    # bazel process for bazel-in-bazel tests to not
    # deplete the system memory completely.
    # - startup JVM memory reduced
    # - top-level bazel process should use as little memory as possible and only 1 core
    # - nested bazel process should use a limited number of cores
    shell_commands:
    - echo 'startup --host_jvm_args=-Xms256m --host_jvm_args=-Xmx1536m' >> .bazelrc
    build_flags:
    - "--build_tag_filters=e2e"
    build_targets:
    - "//..."
    test_flags:
    - "--test_tag_filters=e2e"
    - "--local_resources=792,1.0,1.0"
    # test_args will be passed to the nested bazel process
    - "--test_arg=--local_resources=13288,7.0,1.0"
    - "--test_arg=--test_tag_filters=-no-bazelci,-no-bazelci-ubuntu"
    test_targets:
    - "//..."
  # ubuntu1604_angular_bazel_example:
    # name: ubuntu1604_angular_bazel_example
    # platform: ubuntu1604
    # bazel-in-bazel angular_bazel_example fails on ubuntu as the bazelci
    # ubuntu docker image is missing shares libs required for the versions
    # of chrome and firefox fetched by rules_webtesting. On circleci
    # we have the same issue but we can work around it using apt-get.
    # on bazelci apt-get fails with permission denied and there is no sudo
    # command to switch to root.
    # TODO(gregmagolan): figure out how to install the shared libs on bazelci
  ubuntu1804:
    name: ubuntu1804
    platform: ubuntu1804
    run_targets:
    - "@nodejs//:yarn"
    - "//internal/node/test:no_deps"
    - "//internal/node/test:has_deps_legacy"
    - "//internal/node/test:has_deps"
    - "//internal/node/test:has_deps_hybrid"
    - "//internal/e2e/fine_grained_no_bin:index"
    - "@fine_grained_deps_yarn//typescript/bin:tsc"
    - "@bazel_workspace_a//:bin"
    - "@bazel_workspace_a//subdir:bin"
    - "@bazel_workspace_b//:bin"
    - "@bazel_workspace_b//subdir:bin"
    build_targets:
    - "//..."
    # This target is tagged "manual" but we want some CI
    # coverage of it to make sure it doesn't break.
    - "//docs"
    test_flags:
    - "--test_tag_filters=-e2e,-fix-bazelci-ubuntu"
    test_targets:
    - "//..."
  ubuntu1804_e2e:
    name: ubuntu1804_e2e
    platform: ubuntu1804
    # We need to reduce the memory & CPU usage of the top-level
    # bazel process for bazel-in-bazel tests to not
    # deplete the system memory completely.
    # - startup JVM memory reduced
    # - top-level bazel process should use as little memory as possible and only 1 core
    # - nested bazel process should use a limited number of cores
    shell_commands:
    - echo 'startup --host_jvm_args=-Xms256m --host_jvm_args=-Xmx1536m' >> .bazelrc
    build_flags:
    - "--build_tag_filters=e2e"
    build_targets:
    - "//..."
    test_flags:
    - "--test_tag_filters=e2e"
    - "--local_resources=792,1.0,1.0"
    # test_args will be passed to the nested bazel process
    - "--test_arg=--local_resources=13288,7.0,1.0"
    - "--test_arg=--test_tag_filters=-no-bazelci,-no-bazelci-ubuntu"
    test_targets:
    - "//..."
  # ubuntu1804_angular_bazel_example:
    # name: ubuntu1804_angular_bazel_example
    # platform: ubuntu1804
    # bazel-in-bazel angular_bazel_example fails on ubuntu as the bazelci
    # ubuntu docker image is missing shares libs required for the versions
    # of chrome and firefox fetched by rules_webtesting. On circleci
    # we have the same issue but we can work around it using apt-get.
    # on bazelci apt-get fails with permission denied and there is no sudo
    # command to switch to root.
    # TODO(gregmagolan): figure out how to install the shared libs on bazelci
  macos:
    name: macos
    platform: macos
    run_targets:
    - "@nodejs//:yarn"
    - "//internal/node/test:no_deps"
    - "//internal/node/test:has_deps_legacy"
    - "//internal/node/test:has_deps"
    - "//internal/node/test:has_deps_hybrid"
    - "//internal/e2e/fine_grained_no_bin:index"
    - "@fine_grained_deps_yarn//typescript/bin:tsc"
    - "@bazel_workspace_a//:bin"
    - "@bazel_workspace_a//subdir:bin"
    - "@bazel_workspace_b//:bin"
    - "@bazel_workspace_b//subdir:bin"
    build_targets:
    - "//..."
    test_flags:
    - "--test_tag_filters=-e2e"
    test_targets:
    - "//..."
  macos_e2e:
    name: macos_e2e
    platform: macos
    # We need to reduce the memory & CPU usage of the top-level
    # bazel process for bazel-in-bazel tests to not
    # deplete the system memory completely.
    # - startup JVM memory reduced
    # - top-level bazel process should use as little memory as possible and only 1 core
    # - nested bazel process should use a limited number of cores
    shell_commands:
    - echo 'startup --host_jvm_args=-Xms256m --host_jvm_args=-Xmx1536m' >> .bazelrc
    build_flags:
    - "--build_tag_filters=e2e"
    build_targets:
    - "//..."
    test_flags:
    - "--test_tag_filters=e2e"
    - "--local_resources=792,1.0,1.0"
    # test_args will be passed to the nested bazel process
    # TODO(gregmagolan): fix frequent flake with multiple cores in nested bazel (osx buildkite & local)
    - "--test_arg=--local_resources=8192,1.0,1.0"
    - "--test_arg=--test_tag_filters=-no-bazelci,-no-bazelci-mac"
    test_targets:
    - "//..."
  macos_angular_bazel_example:
    name: macos_angular_bazel_example
    platform: macos
    # We need to reduce the memory & CPU usage of the top-level
    # bazel process for bazel-in-bazel tests to not deplete the
    # system memory completely.
    # - startup JVM memory reduced
    # - top-level bazel process should use as little memory as possible and only 1 core
    # - nested bazel process should use a limited number of cores
    shell_commands:
    - echo 'startup --host_jvm_args=-Xms256m --host_jvm_args=-Xmx1536m' >> .bazelrc
    build_targets:
    # Split up the build & test as test takes a long time and has very
    # little output so running build first makes CI output friendlier.
    # The build step can also use up more memory which may be required
    # to build the release package with this configuration.
    - "//e2e:e2e_angular_bazel_example"
    test_flags:
    - "--local_resources=792,1.0,1.0"
    # test_args will be passed to the nested bazel process
    - "--test_arg=--local_resources=14336,4.0,1.0"
    - "--test_arg=--test_tag_filters=-no-bazelci"
    test_targets:
    - "//e2e:e2e_angular_bazel_example"
  macos_cross_compile:
    name: macos_cross_compile
    platform: macos
    build_flags:
    - "--platforms=@build_bazel_rules_nodejs//toolchains/node:linux_amd64"
    build_targets:
    - "//..."
  windows:
    name: windows
    platform: windows
    run_targets:
    - "@nodejs//:yarn"
    - "//internal/node/test:no_deps"
    - "//internal/node/test:has_deps_legacy"
    - "//internal/node/test:has_deps"
    - "//internal/node/test:has_deps_hybrid"
    - "//internal/e2e/fine_grained_no_bin:index"
    - "@fine_grained_deps_yarn//typescript/bin:tsc"
    - "@bazel_workspace_a//:bin"
    - "@bazel_workspace_a//subdir:bin"
    - "@bazel_workspace_b//:bin"
    - "@bazel_workspace_b//subdir:bin"
    build_targets:
    - "//..."
    test_flags:
    - "--test_tag_filters=-e2e,-fix-windows"
    test_targets:
    - "//..."
  windows_e2e:
    name: windows_e2e
    platform: windows
    build_flags:
    - "--build_tag_filters=e2e"
    build_targets:
    - "//..."
    test_flags:
    - "--test_tag_filters=e2e"
    - "--local_resources=792,1.0,1.0"
    # test_args will be passed to the nested bazel process
    - "--test_arg=--test_tag_filters=-no-bazelci,-no-bazelci-windows"
    - "--test_arg=--local_resources=8192,1.0,1.0"
    test_targets:
    - "//..."
  # windows_angular_bazel_example:
    # name: windows_angular_bazel_example
    # platform: windows
    # bazel-in-bazel angular_bazel_example fails on Windows on bazelci cloning a git repo:
    # ```
    # ERROR: no such package '@io_bazel_rules_k8s//k8s': Traceback (most recent call last):
    # 	File "D:/b/ftxm343s/execroot/build_bazel_rules_nodejs/_tmp/3726d3573001cb4068a18af89eb255de/_bazel_b/ktluxf26/external/bazel_tools/tools/build_defs/repo/git.bzl", line 163
    # 		_clone_or_update(ctx)
    # 	File "D:/b/ftxm343s/execroot/build_bazel_rules_nodejs/_tmp/3726d3573001cb4068a18af89eb255de/_bazel_b/ktluxf26/external/bazel_tools/tools/build_defs/repo/git.bzl", line 36, in _clone_or_update
    # 		git_repo(ctx, directory)
    # ```
    # This is most likely due to a memory issue with this large bazel-in-bazel test.
    # TODO(gregmagolan): figure out what is broken with the above
  windows_cross_compile:
    name: windows_cross_compile
    platform: windows
    build_flags:
    - "--platforms=@build_bazel_rules_nodejs//toolchains/node:linux_amd64"
    build_targets:
    - "//..."
  rbe_ubuntu1604:
    name: rbe_ubuntu1604
    platform: rbe_ubuntu1604
    build_targets:
    - "//..."
