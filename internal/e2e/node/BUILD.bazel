load("@npm_bazel_jasmine//:index.from_src.bzl", "jasmine_node_test")
load("//third_party/github.com/bazelbuild/bazel-skylib:rules/copy_file.bzl", "copy_file")
load("//third_party/github.com/bazelbuild/bazel-skylib:rules/write_file.bzl", "write_file")

jasmine_node_test(
    name = "test",
    srcs = [
        "data_resolution.spec.js",
        "jasmine_node_test.spec.js",
        "module_resolution.spec.js",
    ],
    data = ["data/data.json"],
    deps = [
        "//internal/e2e/node/lib1",
        "@npm//node_resolve_index",
        "@npm//node_resolve_index_2",
        "@npm//node_resolve_index_3",
        "@npm//node_resolve_index_4",
        "@npm//node_resolve_main",
        "@npm//node_resolve_main_2",
        "@npm//node_resolve_nested_main",
    ],
)

jasmine_node_test(
    name = "fail_test",
    srcs = ["jasmine_node_fail_test.spec.js"],
    expected_exit_code = 3,
)

# Also test resolution from built files.
jasmine_node_test(
    name = "lib_test",
    srcs = [
        ":data_resolution_lib",
        ":module_resolution_lib",
    ],
    data = [
        "data/data.json",
        ":genfile-runfile",
    ],
    deps = [
        "//internal/e2e/node/lib1",
        "@npm//node_resolve_index",
        "@npm//node_resolve_index_2",
        "@npm//node_resolve_index_3",
        "@npm//node_resolve_index_4",
        "@npm//node_resolve_main",
        "@npm//node_resolve_main_2",
        "@npm//node_resolve_nested_main",
    ],
)

copy_file(
    name = "module_resolution_lib",
    src = "module_resolution.spec.js",
    out = "module_resolution_built.spec.js",
)

copy_file(
    name = "data_resolution_lib",
    src = "data_resolution.spec.js",
    out = "data_resolution_built.spec.js",
)

# This rule creates a file that alphabetically comes before any source file in this
# package. This genfile can be then set up as runfile to verify that the "node_loader.js"
# properly determines the local workspace path without incorrectly using the genfile as base
# for the local workspace path. See: https://github.com/bazelbuild/rules_nodejs/issues/352
write_file(
    name = "genfile-runfile",
    out = "#LEADING.txt",
)
