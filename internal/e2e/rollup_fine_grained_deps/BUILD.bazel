load("//:defs.bzl", "jasmine_node_test", "nodejs_binary", "rollup_bundle")

# You can have a rollup_bundle with no node_modules attribute
# and no fine grained deps
rollup_bundle(
    name = "bundle_no_deps",
    entry_point = ":no-deps.js",
)

# You can have a rollup_bundle with no node_modules attribute
# and fine grained deps
rollup_bundle(
    name = "bundle",
    entry_point = ":has-deps.js",
    deps = [
        "@fine_grained_deps_yarn//@gregmagolan/test-a",
        "@fine_grained_deps_yarn//@gregmagolan/test-b",
    ],
)

# You can have a rollup_bundle with a node_modules attribute
# and no fine grained deps
rollup_bundle(
    name = "bundle_legacy",
    entry_point = ":has-deps.js",
    node_modules = "@fine_grained_deps_yarn//:node_modules",
)

# You can have a rollup_bundle with both a node_modules attribute
# and fine grained deps so long as they come from the same root
rollup_bundle(
    name = "bundle_hybrid",
    entry_point = ":has-deps.js",
    node_modules = "@fine_grained_deps_yarn//:node_modules",
    deps = [
        "@fine_grained_deps_yarn//@gregmagolan/test-a",
        "@fine_grained_deps_yarn//@gregmagolan/test-b",
    ],
)

filegroup(
    name = "bundles",
    srcs = [
        ":bundle.es2015.js",
        ":bundle.js",
        ":bundle.min.js",
        ":bundle.min_debug.js",
        ":bundle_hybrid.es2015.js",
        ":bundle_hybrid.js",
        ":bundle_hybrid.min.js",
        ":bundle_hybrid.min_debug.js",
        ":bundle_legacy.es2015.js",
        ":bundle_legacy.js",
        ":bundle_legacy.min.js",
        ":bundle_legacy.min_debug.js",
        ":bundle_no_deps.es2015.js",
        ":bundle_no_deps.js",
        ":bundle_no_deps.min.js",
        ":bundle_no_deps.min_debug.js",
    ],
)

filegroup(
    name = "goldens",
    srcs = glob(["golden/**"]),
)

jasmine_node_test(
    name = "test",
    srcs = glob(["*.spec.js"]),
    data = [
        ":bundles",
        ":check.js",
        ":goldens",
        "//internal/npm_install:generate_build_file",
        "@npm//jasmine",
        "@npm//unidiff",
    ],
)

nodejs_binary(
    name = "test.accept",
    data = [
        ":bundles",
        ":check.js",
        ":goldens",
        ":update_golden.js",
        "//internal/npm_install:generate_build_file",
        "@npm//jasmine",
        "@npm//unidiff",
    ],
    entry_point = ":update_golden.js",
    install_source_map_support = False,
)
