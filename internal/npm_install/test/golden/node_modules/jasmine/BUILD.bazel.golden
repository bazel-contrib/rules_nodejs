
package(default_visibility = ["//visibility:public"])
load("@build_bazel_rules_nodejs//:defs.bzl", "nodejs_binary")
filegroup(
    name = "jasmine__pkg",
    srcs = [
        ":jasmine__files",
        "//node_modules/glob:glob__files",
        "//node_modules/fs.realpath:fs.realpath__files",
        "//node_modules/inflight:inflight__files",
        "//node_modules/once:once__files",
        "//node_modules/wrappy:wrappy__files",
        "//node_modules/inherits:inherits__files",
        "//node_modules/minimatch:minimatch__files",
        "//node_modules/brace-expansion:brace-expansion__files",
        "//node_modules/balanced-match:balanced-match__files",
        "//node_modules/concat-map:concat-map__files",
        "//node_modules/path-is-absolute:path-is-absolute__files",
        "//node_modules/jasmine-core:jasmine-core__files",
    ],
    tags = ["NODE_MODULE_MARKER"],
)
filegroup(
    name = "jasmine__files",
    srcs = [
        ":.bin/jasmine",
        ":.editorconfig",
        ":.travis.yml",
        ":Gruntfile.js",
        ":MIT.LICENSE",
        ":README.md",
        ":bin/jasmine.js",
        ":lib/command.js",
        ":lib/examples/jasmine.json",
        ":lib/filters/console_spec_filter.js",
        ":lib/jasmine.js",
        ":lib/reporters/completion_reporter.js",
        ":lib/reporters/console_reporter.js",
        ":package.json",
        ":tasks/jasmine.js",
    ],
    tags = ["NODE_MODULE_MARKER"],
)
filegroup(
    name = "jasmine__typings",
    srcs = [
        
    ],
    tags = ["NODE_MODULE_MARKER"],
)
nodejs_binary(
    name = "jasmine__bin",
    entry_point = "jasmine/bin/jasmine.js",
    install_source_map_support = False,
    data = [":jasmine__pkg"],
)
