load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@build_bazel_rules_nodejs//internal/npm_install:npm_umd_bundle.bzl", "npm_umd_bundle")

filegroup(
    name = "goldens",
    srcs = glob(["golden/**"]),
)

filegroup(
    name = "goldens_directory_artifacts",
    srcs = glob(["golden_directory_artifacts/**"]),
)

filegroup(
    name = "goldens_multi_linked",
    srcs = glob(["golden_multi_linked/**"]),
)

nodejs_binary(
    name = "test.update",
    data = [
        ":check.js",
        ":goldens",
        ":goldens_directory_artifacts",
        ":goldens_multi_linked",
        ":update_golden.js",
        "@fine_grained_directory_artifacts_goldens//:golden_files",
        "@fine_grained_goldens//:golden_files",
        "@fine_grained_goldens_multi_linked//:golden_files",
        "@npm//jasmine",
        "@npm//unidiff",
    ],
    entry_point = ":update_golden.js",
)

npm_umd_bundle(
    name = "test-minimist-bundling",
    package_name = "minimist",
    entry_point = "@npm//:node_modules/minimist/index.js",
    package = "@npm//minimist",
)

npm_umd_bundle(
    name = "test-core-util-is-bundling",
    package_name = "core-util-is",
    entry_point = "@npm//:node_modules/core-util-is/lib/util.js",
    package = "@npm//core-util-is",
)

npm_umd_bundle(
    name = "test-sinon-bundling",
    package_name = "sinon",
    entry_point = "@npm//:node_modules/sinon/lib/sinon.js",
    package = "@npm//sinon",
)

npm_umd_bundle(
    name = "test-rxjs-umd",
    package_name = "rxjs",
    entry_point = "@npm//:node_modules/rxjs/_esm5/index.js",
    package = "@npm//rxjs",
)

npm_umd_bundle(
    name = "test-typeorm-umd",
    package_name = "typeorm",
    entry_point = "@npm//:node_modules/typeorm/browser/index.js",
    excluded = ["react-native-sqlite-storage"],
    package = "@npm//typeorm",
)

sh_test(
    name = "bazel_bin_test",
    srcs = ["bazel_bin_test.sh"],
    data = [
        "@build_bazel_rules_nodejs//third_party/github.com/bazelbuild/bazel/tools/bash/runfiles",
        "@npm//testy/bin:testy",
    ],
)

# A target to run that ensures yarn_install works for the case that there is
# no node_modules/.bin folder since @fine_grained_no_bin does not contain
# any npm packages with bins
nodejs_binary(
    name = "index",
    data = [
        "index.js",
        "other/other.js",
        "@fine_grained_no_bin//fs.realpath",
    ],
    entry_point = ":index.js",
)
