load("@build_bazel_rules_nodejs//:index.bzl", "npm_package")
load("@npm_bazel_jasmine//:index.from_src.bzl", "jasmine_node_test")
load("//internal/common:typescript_mock_lib.bzl", "mock_typescript_lib")
load("//third_party/github.com/bazelbuild/bazel-skylib:rules/write_file.bzl", "write_file")

write_file(
    name = "produces_files",
    out = "a_dep",
    content = ["a_dep content"],
)

mock_typescript_lib(
    name = "ts_library",
    srcs = [
        "foo.d.ts",
        "foo.js",
    ],
    data = ["data.json"],
)

npm_package(
    name = "dependent_pkg",
    srcs = ["dependent_file"],
)

npm_package(
    name = "test_pkg",
    srcs = [
        "package.json",
        "some_file",
        "@internal_npm_package_test_vendored_external//:vendored_external_file",
    ],
    packages = [":dependent_pkg"],
    replacements = {"replace_me": "replaced"},
    vendor_external = [
        "internal_npm_package_test_vendored_external",
    ],
    deps = [
        ":bundle.min.js",
        ":produces_files",
        ":ts_library",
        "@internal_npm_package_test_vendored_external//:ts_library",
    ],
)

jasmine_node_test(
    name = "test",
    srcs = ["npm_package.spec.js"],
    data = [":test_pkg"],
)

genrule(
    name = "bundle",
    outs = ["bundle.min.js"],
    cmd = "echo -n 'bundle content' > $@",
)
