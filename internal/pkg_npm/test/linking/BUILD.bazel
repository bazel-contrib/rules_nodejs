load("@npm//typescript:index.bzl", "tsc")
load("//:index.bzl", "nodejs_test")

tsc(
    name = "main",
    outs = [
        "main.d.ts",
        "main.js",
    ],
    args = [
        "-p",
        "$(execpath tsconfig.json)",
        "--outDir",
        # $(RULEDIR) is a shorthand for the dist/bin directory where Bazel requires we write outputs
        "$(RULEDIR)",
    ],
    data = [
        "main.ts",
        "tsconfig.json",
        # bar: pkg_npm with js, d.ts srcs & package.json main & typings
        "//internal/pkg_npm/test/linking/bar",
        "//internal/pkg_npm/test/linking/bar:scoped_bar",
        # baz: pkg_npm with js, d.ts srcs & no package.json
        "//internal/pkg_npm/test/linking/baz",
        "//internal/pkg_npm/test/linking/baz:scoped_baz",
        # feb: pkg_npm with ts_library dep & package.json main & typings
        # "//internal/pkg_npm/test/linking/feb:feb_lib",
        "//internal/pkg_npm/test/linking/feb",
        "//internal/pkg_npm/test/linking/feb:scoped_feb",
        # fez: pkg_npm with ts_library dep & no package.json
        # "//internal/pkg_npm/test/linking/fez:fez_lib",
        "//internal/pkg_npm/test/linking/fez",
        "//internal/pkg_npm/test/linking/fez:scoped_fez",
        # foo: pkg_npm with js_library dep & package.json main & typings
        "//internal/pkg_npm/test/linking/foo:foo_lib",
        "//internal/pkg_npm/test/linking/foo:scoped_foo_lib",
        "//internal/pkg_npm/test/linking/foo",
        "//internal/pkg_npm/test/linking/foo:scoped_foo",
        # foz: pkg_npm with js_library dep & no package.json
        "//internal/pkg_npm/test/linking/foz:foz_lib",
        "//internal/pkg_npm/test/linking/foz:scoped_foz_lib",
        "//internal/pkg_npm/test/linking/foz",
        "//internal/pkg_npm/test/linking/foz:scoped_foz",
        # fub: pkg_npm with tsc dep & package.json main & typings
        "//internal/pkg_npm/test/linking/fub",
        "//internal/pkg_npm/test/linking/fub:scoped_fub",
        # fuz: pkg_npm with tsc dep & no package.json
        "//internal/pkg_npm/test/linking/fuz",
        "//internal/pkg_npm/test/linking/fuz:scoped_fuz",
    ],
)

nodejs_test(
    name = "test",
    data = [
        ":main",
        # bar: pkg_npm with js, d.ts srcs & package.json main & typings
        "//internal/pkg_npm/test/linking/bar",
        "//internal/pkg_npm/test/linking/bar:scoped_bar",
        # baz: pkg_npm with js, d.ts srcs & no package.json
        "//internal/pkg_npm/test/linking/baz",
        "//internal/pkg_npm/test/linking/baz:scoped_baz",
        # feb: pkg_npm with ts_library dep & package.json main & typings
        # "//internal/pkg_npm/test/linking/feb:feb_lib",
        "//internal/pkg_npm/test/linking/feb",
        "//internal/pkg_npm/test/linking/feb:scoped_feb",
        # fez: pkg_npm with ts_library dep & no package.json
        "//internal/pkg_npm/test/linking/fez:fez_lib",
        "//internal/pkg_npm/test/linking/fez",
        "//internal/pkg_npm/test/linking/fez:scoped_fez",
        # foo: pkg_npm with js_library dep & package.json main & typings
        "//internal/pkg_npm/test/linking/foo:foo_lib",
        "//internal/pkg_npm/test/linking/foo:scoped_foo_lib",
        "//internal/pkg_npm/test/linking/foo",
        "//internal/pkg_npm/test/linking/foo:scoped_foo",
        # foz: pkg_npm with js_library dep & no package.json
        "//internal/pkg_npm/test/linking/foz:foz_lib",
        "//internal/pkg_npm/test/linking/foz:scoped_foz_lib",
        "//internal/pkg_npm/test/linking/foz",
        "//internal/pkg_npm/test/linking/foz:scoped_foz",
        # fub: pkg_npm with tsc dep & package.json main & typings
        "//internal/pkg_npm/test/linking/fub",
        "//internal/pkg_npm/test/linking/fub:scoped_fub",
        # fuz: pkg_npm with tsc dep & no package.json
        "//internal/pkg_npm/test/linking/fuz",
        "//internal/pkg_npm/test/linking/fuz:scoped_fuz",
    ],
    entry_point = ":main.js",
    templated_args = ["--nobazel_patch_module_resolver"],
)
